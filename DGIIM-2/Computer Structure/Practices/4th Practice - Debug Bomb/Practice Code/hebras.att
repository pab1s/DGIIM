
hebras:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 403ff0 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	f2 ff 25 e3 2f 00 00 	bnd jmpq *0x2fe3(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102d:	0f 1f 00             	nopl   (%rax)
  401030:	f3 0f 1e fa          	endbr64 
  401034:	68 00 00 00 00       	pushq  $0x0
  401039:	f2 e9 e1 ff ff ff    	bnd jmpq 401020 <.plt>
  40103f:	90                   	nop
  401040:	f3 0f 1e fa          	endbr64 
  401044:	68 01 00 00 00       	pushq  $0x1
  401049:	f2 e9 d1 ff ff ff    	bnd jmpq 401020 <.plt>
  40104f:	90                   	nop
  401050:	f3 0f 1e fa          	endbr64 
  401054:	68 02 00 00 00       	pushq  $0x2
  401059:	f2 e9 c1 ff ff ff    	bnd jmpq 401020 <.plt>
  40105f:	90                   	nop
  401060:	f3 0f 1e fa          	endbr64 
  401064:	68 03 00 00 00       	pushq  $0x3
  401069:	f2 e9 b1 ff ff ff    	bnd jmpq 401020 <.plt>
  40106f:	90                   	nop
  401070:	f3 0f 1e fa          	endbr64 
  401074:	68 04 00 00 00       	pushq  $0x4
  401079:	f2 e9 a1 ff ff ff    	bnd jmpq 401020 <.plt>
  40107f:	90                   	nop
  401080:	f3 0f 1e fa          	endbr64 
  401084:	68 05 00 00 00       	pushq  $0x5
  401089:	f2 e9 91 ff ff ff    	bnd jmpq 401020 <.plt>
  40108f:	90                   	nop
  401090:	f3 0f 1e fa          	endbr64 
  401094:	68 06 00 00 00       	pushq  $0x6
  401099:	f2 e9 81 ff ff ff    	bnd jmpq 401020 <.plt>
  40109f:	90                   	nop
  4010a0:	f3 0f 1e fa          	endbr64 
  4010a4:	68 07 00 00 00       	pushq  $0x7
  4010a9:	f2 e9 71 ff ff ff    	bnd jmpq 401020 <.plt>
  4010af:	90                   	nop
  4010b0:	f3 0f 1e fa          	endbr64 
  4010b4:	68 08 00 00 00       	pushq  $0x8
  4010b9:	f2 e9 61 ff ff ff    	bnd jmpq 401020 <.plt>
  4010bf:	90                   	nop
  4010c0:	f3 0f 1e fa          	endbr64 
  4010c4:	68 09 00 00 00       	pushq  $0x9
  4010c9:	f2 e9 51 ff ff ff    	bnd jmpq 401020 <.plt>
  4010cf:	90                   	nop
  4010d0:	f3 0f 1e fa          	endbr64 
  4010d4:	68 0a 00 00 00       	pushq  $0xa
  4010d9:	f2 e9 41 ff ff ff    	bnd jmpq 401020 <.plt>
  4010df:	90                   	nop
  4010e0:	f3 0f 1e fa          	endbr64 
  4010e4:	68 0b 00 00 00       	pushq  $0xb
  4010e9:	f2 e9 31 ff ff ff    	bnd jmpq 401020 <.plt>
  4010ef:	90                   	nop
  4010f0:	f3 0f 1e fa          	endbr64 
  4010f4:	68 0c 00 00 00       	pushq  $0xc
  4010f9:	f2 e9 21 ff ff ff    	bnd jmpq 401020 <.plt>
  4010ff:	90                   	nop
  401100:	f3 0f 1e fa          	endbr64 
  401104:	68 0d 00 00 00       	pushq  $0xd
  401109:	f2 e9 11 ff ff ff    	bnd jmpq 401020 <.plt>
  40110f:	90                   	nop
  401110:	f3 0f 1e fa          	endbr64 
  401114:	68 0e 00 00 00       	pushq  $0xe
  401119:	f2 e9 01 ff ff ff    	bnd jmpq 401020 <.plt>
  40111f:	90                   	nop
  401120:	f3 0f 1e fa          	endbr64 
  401124:	68 0f 00 00 00       	pushq  $0xf
  401129:	f2 e9 f1 fe ff ff    	bnd jmpq 401020 <.plt>
  40112f:	90                   	nop
  401130:	f3 0f 1e fa          	endbr64 
  401134:	68 10 00 00 00       	pushq  $0x10
  401139:	f2 e9 e1 fe ff ff    	bnd jmpq 401020 <.plt>
  40113f:	90                   	nop
  401140:	f3 0f 1e fa          	endbr64 
  401144:	68 11 00 00 00       	pushq  $0x11
  401149:	f2 e9 d1 fe ff ff    	bnd jmpq 401020 <.plt>
  40114f:	90                   	nop
  401150:	f3 0f 1e fa          	endbr64 
  401154:	68 12 00 00 00       	pushq  $0x12
  401159:	f2 e9 c1 fe ff ff    	bnd jmpq 401020 <.plt>
  40115f:	90                   	nop
  401160:	f3 0f 1e fa          	endbr64 
  401164:	68 13 00 00 00       	pushq  $0x13
  401169:	f2 e9 b1 fe ff ff    	bnd jmpq 401020 <.plt>
  40116f:	90                   	nop
  401170:	f3 0f 1e fa          	endbr64 
  401174:	68 14 00 00 00       	pushq  $0x14
  401179:	f2 e9 a1 fe ff ff    	bnd jmpq 401020 <.plt>
  40117f:	90                   	nop

Desensamblado de la sección .plt.sec:

0000000000401180 <std::chrono::_V2::system_clock::now()@plt>:
  401180:	f3 0f 1e fa          	endbr64 
  401184:	f2 ff 25 8d 2e 00 00 	bnd jmpq *0x2e8d(%rip)        # 404018 <std::chrono::_V2::system_clock::now()@GLIBCXX_3.4.19>
  40118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401190 <std::terminate()@plt>:
  401190:	f3 0f 1e fa          	endbr64 
  401194:	f2 ff 25 85 2e 00 00 	bnd jmpq *0x2e85(%rip)        # 404020 <std::terminate()@GLIBCXX_3.4>
  40119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011a0 <strlen@plt>:
  4011a0:	f3 0f 1e fa          	endbr64 
  4011a4:	f2 ff 25 7d 2e 00 00 	bnd jmpq *0x2e7d(%rip)        # 404028 <strlen@GLIBC_2.2.5>
  4011ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011b0 <memcmp@plt>:
  4011b0:	f3 0f 1e fa          	endbr64 
  4011b4:	f2 ff 25 75 2e 00 00 	bnd jmpq *0x2e75(%rip)        # 404030 <memcmp@GLIBC_2.2.5>
  4011bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011c0 <std::thread::_State::~_State()@plt>:
  4011c0:	f3 0f 1e fa          	endbr64 
  4011c4:	f2 ff 25 6d 2e 00 00 	bnd jmpq *0x2e6d(%rip)        # 404038 <std::thread::_State::~_State()@GLIBCXX_3.4.22>
  4011cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011d0 <std::istream::operator>>(int&)@plt>:
  4011d0:	f3 0f 1e fa          	endbr64 
  4011d4:	f2 ff 25 65 2e 00 00 	bnd jmpq *0x2e65(%rip)        # 404040 <std::istream::operator>>(int&)@GLIBCXX_3.4>
  4011db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011e0 <__cxa_atexit@plt>:
  4011e0:	f3 0f 1e fa          	endbr64 
  4011e4:	f2 ff 25 5d 2e 00 00 	bnd jmpq *0x2e5d(%rip)        # 404048 <__cxa_atexit@GLIBC_2.2.5>
  4011eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011f0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>:
  4011f0:	f3 0f 1e fa          	endbr64 
  4011f4:	f2 ff 25 55 2e 00 00 	bnd jmpq *0x2e55(%rip)        # 404050 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@GLIBCXX_3.4.22>
  4011fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401200 <operator delete(void*)@plt>:
  401200:	f3 0f 1e fa          	endbr64 
  401204:	f2 ff 25 4d 2e 00 00 	bnd jmpq *0x2e4d(%rip)        # 404058 <operator delete(void*)@GLIBCXX_3.4>
  40120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401210 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
  401210:	f3 0f 1e fa          	endbr64 
  401214:	f2 ff 25 45 2e 00 00 	bnd jmpq *0x2e45(%rip)        # 404060 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@GLIBCXX_3.4>
  40121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401220 <operator new(unsigned long)@plt>:
  401220:	f3 0f 1e fa          	endbr64 
  401224:	f2 ff 25 3d 2e 00 00 	bnd jmpq *0x2e3d(%rip)        # 404068 <operator new(unsigned long)@GLIBCXX_3.4>
  40122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401230 <operator delete(void*, unsigned long)@plt>:
  401230:	f3 0f 1e fa          	endbr64 
  401234:	f2 ff 25 35 2e 00 00 	bnd jmpq *0x2e35(%rip)        # 404070 <operator delete(void*, unsigned long)@CXXABI_1.3.9>
  40123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401240 <__stack_chk_fail@plt>:
  401240:	f3 0f 1e fa          	endbr64 
  401244:	f2 ff 25 2d 2e 00 00 	bnd jmpq *0x2e2d(%rip)        # 404078 <__stack_chk_fail@GLIBC_2.4>
  40124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
  401250:	f3 0f 1e fa          	endbr64 
  401254:	f2 ff 25 25 2e 00 00 	bnd jmpq *0x2e25(%rip)        # 404080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
  40125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401260 <exit@plt>:
  401260:	f3 0f 1e fa          	endbr64 
  401264:	f2 ff 25 1d 2e 00 00 	bnd jmpq *0x2e1d(%rip)        # 404088 <exit@GLIBC_2.2.5>
  40126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401270 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>:
  401270:	f3 0f 1e fa          	endbr64 
  401274:	f2 ff 25 15 2e 00 00 	bnd jmpq *0x2e15(%rip)        # 404090 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@GLIBCXX_3.4.21>
  40127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401280 <sched_yield@plt>:
  401280:	f3 0f 1e fa          	endbr64 
  401284:	f2 ff 25 0d 2e 00 00 	bnd jmpq *0x2e0d(%rip)        # 404098 <sched_yield@GLIBC_2.2.5>
  40128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401290 <std::ios_base::Init::Init()@plt>:
  401290:	f3 0f 1e fa          	endbr64 
  401294:	f2 ff 25 05 2e 00 00 	bnd jmpq *0x2e05(%rip)        # 4040a0 <std::ios_base::Init::Init()@GLIBCXX_3.4>
  40129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004012a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
  4012a0:	f3 0f 1e fa          	endbr64 
  4012a4:	f2 ff 25 fd 2d 00 00 	bnd jmpq *0x2dfd(%rip)        # 4040a8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@GLIBCXX_3.4>
  4012ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004012b0 <std::thread::join()@plt>:
  4012b0:	f3 0f 1e fa          	endbr64 
  4012b4:	f2 ff 25 f5 2d 00 00 	bnd jmpq *0x2df5(%rip)        # 4040b0 <std::thread::join()@GLIBCXX_3.4.11>
  4012bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004012c0 <_Unwind_Resume@plt>:
  4012c0:	f3 0f 1e fa          	endbr64 
  4012c4:	f2 ff 25 ed 2d 00 00 	bnd jmpq *0x2ded(%rip)        # 4040b8 <_Unwind_Resume@GCC_3.0>
  4012cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .text:

00000000004012d0 <main.cold>:
  4012d0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4012d5:	48 39 df             	cmp    %rbx,%rdi
  4012d8:	74 05                	je     4012df <main.cold+0xf>
  4012da:	e8 21 ff ff ff       	callq  401200 <operator delete(void*)@plt>
  4012df:	48 89 ef             	mov    %rbp,%rdi
  4012e2:	e8 d9 ff ff ff       	callq  4012c0 <_Unwind_Resume@plt>
  4012e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4012ee:	00 00 

00000000004012f0 <main>:
  4012f0:	f3 0f 1e fa          	endbr64 
  4012f4:	55                   	push   %rbp
  4012f5:	48 8d 35 ff 0d 00 00 	lea    0xdff(%rip),%rsi        # 4020fb <_IO_stdin_used+0xfb>
  4012fc:	53                   	push   %rbx
  4012fd:	48 83 ec 48          	sub    $0x48,%rsp
  401301:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401308:	00 00 
  40130a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40130f:	31 c0                	xor    %eax,%eax
  401311:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  401316:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  40131b:	c7 44 24 20 68 6f 6c 	movl   $0x616c6f68,0x20(%rsp)
  401322:	61 
  401323:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  401328:	48 c7 44 24 18 04 00 	movq   $0x4,0x18(%rsp)
  40132f:	00 00 
  401331:	c6 44 24 24 00       	movb   $0x0,0x24(%rsp)
  401336:	c7 44 24 0c d2 04 00 	movl   $0x4d2,0xc(%rsp)
  40133d:	00 
  40133e:	e8 2d 03 00 00       	callq  401670 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)>
  401343:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
  401348:	48 8d 35 b8 0d 00 00 	lea    0xdb8(%rip),%rsi        # 402107 <_IO_stdin_used+0x107>
  40134f:	e8 0c 05 00 00       	callq  401860 <void comparar<int>(int const&, char const*)>
  401354:	e8 77 01 00 00       	callq  4014d0 <desactivar()>
  401359:	f3 0f 1e fa          	endbr64 
  40135d:	48 89 c5             	mov    %rax,%rbp
  401360:	e9 6b ff ff ff       	jmpq   4012d0 <main.cold>
  401365:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40136c:	00 00 00 00 

0000000000401370 <_GLOBAL__sub_I__Z8explotarv>:
  401370:	f3 0f 1e fa          	endbr64 
  401374:	48 83 ec 08          	sub    $0x8,%rsp
  401378:	48 8d 3d ba 2f 00 00 	lea    0x2fba(%rip),%rdi        # 404339 <std::__ioinit>
  40137f:	e8 0c ff ff ff       	callq  401290 <std::ios_base::Init::Init()@plt>
  401384:	48 8b 3d 6d 2c 00 00 	mov    0x2c6d(%rip),%rdi        # 403ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
  40138b:	48 83 c4 08          	add    $0x8,%rsp
  40138f:	48 8d 15 32 2d 00 00 	lea    0x2d32(%rip),%rdx        # 4040c8 <__dso_handle>
  401396:	48 8d 35 9c 2f 00 00 	lea    0x2f9c(%rip),%rsi        # 404339 <std::__ioinit>
  40139d:	e9 3e fe ff ff       	jmpq   4011e0 <__cxa_atexit@plt>
  4013a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4013a9:	00 00 00 
  4013ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013b0 <_start>:
  4013b0:	f3 0f 1e fa          	endbr64 
  4013b4:	31 ed                	xor    %ebp,%ebp
  4013b6:	49 89 d1             	mov    %rdx,%r9
  4013b9:	5e                   	pop    %rsi
  4013ba:	48 89 e2             	mov    %rsp,%rdx
  4013bd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4013c1:	50                   	push   %rax
  4013c2:	54                   	push   %rsp
  4013c3:	49 c7 c0 60 1a 40 00 	mov    $0x401a60,%r8
  4013ca:	48 c7 c1 f0 19 40 00 	mov    $0x4019f0,%rcx
  4013d1:	48 c7 c7 f0 12 40 00 	mov    $0x4012f0,%rdi
  4013d8:	ff 15 0a 2c 00 00    	callq  *0x2c0a(%rip)        # 403fe8 <__libc_start_main@GLIBC_2.2.5>
  4013de:	f4                   	hlt    
  4013df:	90                   	nop

00000000004013e0 <_dl_relocate_static_pie>:
  4013e0:	f3 0f 1e fa          	endbr64 
  4013e4:	c3                   	retq   
  4013e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4013ec:	00 00 00 
  4013ef:	90                   	nop

00000000004013f0 <deregister_tm_clones>:
  4013f0:	b8 d8 40 40 00       	mov    $0x4040d8,%eax
  4013f5:	48 3d d8 40 40 00    	cmp    $0x4040d8,%rax
  4013fb:	74 13                	je     401410 <deregister_tm_clones+0x20>
  4013fd:	b8 00 00 00 00       	mov    $0x0,%eax
  401402:	48 85 c0             	test   %rax,%rax
  401405:	74 09                	je     401410 <deregister_tm_clones+0x20>
  401407:	bf d8 40 40 00       	mov    $0x4040d8,%edi
  40140c:	ff e0                	jmpq   *%rax
  40140e:	66 90                	xchg   %ax,%ax
  401410:	c3                   	retq   
  401411:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401418:	00 00 00 00 
  40141c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401420 <register_tm_clones>:
  401420:	be d8 40 40 00       	mov    $0x4040d8,%esi
  401425:	48 81 ee d8 40 40 00 	sub    $0x4040d8,%rsi
  40142c:	48 89 f0             	mov    %rsi,%rax
  40142f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401433:	48 c1 f8 03          	sar    $0x3,%rax
  401437:	48 01 c6             	add    %rax,%rsi
  40143a:	48 d1 fe             	sar    %rsi
  40143d:	74 11                	je     401450 <register_tm_clones+0x30>
  40143f:	b8 00 00 00 00       	mov    $0x0,%eax
  401444:	48 85 c0             	test   %rax,%rax
  401447:	74 07                	je     401450 <register_tm_clones+0x30>
  401449:	bf d8 40 40 00       	mov    $0x4040d8,%edi
  40144e:	ff e0                	jmpq   *%rax
  401450:	c3                   	retq   
  401451:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401458:	00 00 00 00 
  40145c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401460 <__do_global_dtors_aux>:
  401460:	f3 0f 1e fa          	endbr64 
  401464:	80 3d cd 2e 00 00 00 	cmpb   $0x0,0x2ecd(%rip)        # 404338 <completed.8060>
  40146b:	75 13                	jne    401480 <__do_global_dtors_aux+0x20>
  40146d:	55                   	push   %rbp
  40146e:	48 89 e5             	mov    %rsp,%rbp
  401471:	e8 7a ff ff ff       	callq  4013f0 <deregister_tm_clones>
  401476:	c6 05 bb 2e 00 00 01 	movb   $0x1,0x2ebb(%rip)        # 404338 <completed.8060>
  40147d:	5d                   	pop    %rbp
  40147e:	c3                   	retq   
  40147f:	90                   	nop
  401480:	c3                   	retq   
  401481:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401488:	00 00 00 00 
  40148c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401490 <frame_dummy>:
  401490:	f3 0f 1e fa          	endbr64 
  401494:	eb 8a                	jmp    401420 <register_tm_clones>
  401496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40149d:	00 00 00 

00000000004014a0 <explotar()>:
  4014a0:	f3 0f 1e fa          	endbr64 
  4014a4:	50                   	push   %rax
  4014a5:	58                   	pop    %rax
  4014a6:	48 8d 3d 53 2c 00 00 	lea    0x2c53(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  4014ad:	48 8d 35 54 0b 00 00 	lea    0xb54(%rip),%rsi        # 402008 <_IO_stdin_used+0x8>
  4014b4:	48 83 ec 08          	sub    $0x8,%rsp
  4014b8:	e8 53 fd ff ff       	callq  401210 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  4014bd:	bf 01 00 00 00       	mov    $0x1,%edi
  4014c2:	e8 99 fd ff ff       	callq  401260 <exit@plt>
  4014c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4014ce:	00 00 

00000000004014d0 <desactivar()>:
  4014d0:	f3 0f 1e fa          	endbr64 
  4014d4:	50                   	push   %rax
  4014d5:	58                   	pop    %rax
  4014d6:	ba 2b 00 00 00       	mov    $0x2b,%edx
  4014db:	48 8d 35 ae 0b 00 00 	lea    0xbae(%rip),%rsi        # 402090 <_IO_stdin_used+0x90>
  4014e2:	48 8d 3d 17 2c 00 00 	lea    0x2c17(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  4014e9:	48 83 ec 08          	sub    $0x8,%rsp
  4014ed:	e8 5e fd ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  4014f2:	ba 2b 00 00 00       	mov    $0x2b,%edx
  4014f7:	48 8d 35 c2 0b 00 00 	lea    0xbc2(%rip),%rsi        # 4020c0 <_IO_stdin_used+0xc0>
  4014fe:	48 8d 3d fb 2b 00 00 	lea    0x2bfb(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401505:	e8 46 fd ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  40150a:	48 8d 3d ef 2b 00 00 	lea    0x2bef(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401511:	48 8d 35 78 0b 00 00 	lea    0xb78(%rip),%rsi        # 402090 <_IO_stdin_used+0x90>
  401518:	e8 f3 fc ff ff       	callq  401210 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  40151d:	31 ff                	xor    %edi,%edi
  40151f:	e8 3c fd ff ff       	callq  401260 <exit@plt>
  401524:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40152b:	00 00 00 
  40152e:	66 90                	xchg   %ax,%ax

0000000000401530 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >::~_State_impl()>:
  401530:	f3 0f 1e fa          	endbr64 
  401534:	48 8d 05 35 28 00 00 	lea    0x2835(%rip),%rax        # 403d70 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >+0x10>
  40153b:	48 89 07             	mov    %rax,(%rdi)
  40153e:	e9 7d fc ff ff       	jmpq   4011c0 <std::thread::_State::~_State()@plt>
  401543:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40154a:	00 00 00 
  40154d:	0f 1f 00             	nopl   (%rax)

0000000000401550 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >::~_State_impl()>:
  401550:	f3 0f 1e fa          	endbr64 
  401554:	48 8d 05 15 28 00 00 	lea    0x2815(%rip),%rax        # 403d70 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >+0x10>
  40155b:	55                   	push   %rbp
  40155c:	48 89 fd             	mov    %rdi,%rbp
  40155f:	48 89 07             	mov    %rax,(%rdi)
  401562:	e8 59 fc ff ff       	callq  4011c0 <std::thread::_State::~_State()@plt>
  401567:	48 89 ef             	mov    %rbp,%rdi
  40156a:	be 10 00 00 00       	mov    $0x10,%esi
  40156f:	5d                   	pop    %rbp
  401570:	e9 bb fc ff ff       	jmpq   401230 <operator delete(void*, unsigned long)@plt>
  401575:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40157c:	00 00 00 
  40157f:	90                   	nop

0000000000401580 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >::~_State_impl()>:
  401580:	f3 0f 1e fa          	endbr64 
  401584:	48 8d 05 0d 28 00 00 	lea    0x280d(%rip),%rax        # 403d98 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >+0x10>
  40158b:	48 89 07             	mov    %rax,(%rdi)
  40158e:	e9 2d fc ff ff       	jmpq   4011c0 <std::thread::_State::~_State()@plt>
  401593:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40159a:	00 00 00 
  40159d:	0f 1f 00             	nopl   (%rax)

00000000004015a0 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >::~_State_impl()>:
  4015a0:	f3 0f 1e fa          	endbr64 
  4015a4:	48 8d 05 ed 27 00 00 	lea    0x27ed(%rip),%rax        # 403d98 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >+0x10>
  4015ab:	55                   	push   %rbp
  4015ac:	48 89 fd             	mov    %rdi,%rbp
  4015af:	48 89 07             	mov    %rax,(%rdi)
  4015b2:	e8 09 fc ff ff       	callq  4011c0 <std::thread::_State::~_State()@plt>
  4015b7:	48 89 ef             	mov    %rbp,%rdi
  4015ba:	be 10 00 00 00       	mov    $0x10,%esi
  4015bf:	5d                   	pop    %rbp
  4015c0:	e9 6b fc ff ff       	jmpq   401230 <operator delete(void*, unsigned long)@plt>
  4015c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4015cc:	00 00 00 
  4015cf:	90                   	nop

00000000004015d0 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >::_M_run()>:
  4015d0:	f3 0f 1e fa          	endbr64 
  4015d4:	55                   	push   %rbp
  4015d5:	48 89 fd             	mov    %rdi,%rbp
  4015d8:	53                   	push   %rbx
  4015d9:	48 bb 00 f2 05 2a 01 	movabs $0x12a05f200,%rbx
  4015e0:	00 00 00 
  4015e3:	48 83 ec 08          	sub    $0x8,%rsp
  4015e7:	e8 94 fb ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  4015ec:	48 01 c3             	add    %rax,%rbx
  4015ef:	eb 16                	jmp    401607 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >::_M_run()+0x37>
  4015f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4015f8:	e8 83 fc ff ff       	callq  401280 <sched_yield@plt>
  4015fd:	e8 7e fb ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  401602:	48 39 c3             	cmp    %rax,%rbx
  401605:	7c 12                	jl     401619 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >::_M_run()+0x49>
  401607:	48 8b 45 08          	mov    0x8(%rbp),%rax
  40160b:	0f b6 00             	movzbl (%rax),%eax
  40160e:	84 c0                	test   %al,%al
  401610:	75 e6                	jne    4015f8 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >::_M_run()+0x28>
  401612:	48 83 c4 08          	add    $0x8,%rsp
  401616:	5b                   	pop    %rbx
  401617:	5d                   	pop    %rbp
  401618:	c3                   	retq   
  401619:	e8 82 fe ff ff       	callq  4014a0 <explotar()>
  40161e:	66 90                	xchg   %ax,%ax

0000000000401620 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >::_M_run()>:
  401620:	f3 0f 1e fa          	endbr64 
  401624:	55                   	push   %rbp
  401625:	48 89 fd             	mov    %rdi,%rbp
  401628:	53                   	push   %rbx
  401629:	48 bb 00 f2 05 2a 01 	movabs $0x12a05f200,%rbx
  401630:	00 00 00 
  401633:	48 83 ec 08          	sub    $0x8,%rsp
  401637:	e8 44 fb ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  40163c:	48 01 c3             	add    %rax,%rbx
  40163f:	eb 16                	jmp    401657 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >::_M_run()+0x37>
  401641:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401648:	e8 33 fc ff ff       	callq  401280 <sched_yield@plt>
  40164d:	e8 2e fb ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  401652:	48 39 c3             	cmp    %rax,%rbx
  401655:	7c 12                	jl     401669 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >::_M_run()+0x49>
  401657:	48 8b 45 08          	mov    0x8(%rbp),%rax
  40165b:	0f b6 00             	movzbl (%rax),%eax
  40165e:	84 c0                	test   %al,%al
  401660:	75 e6                	jne    401648 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >::_M_run()+0x28>
  401662:	48 83 c4 08          	add    $0x8,%rsp
  401666:	5b                   	pop    %rbx
  401667:	5d                   	pop    %rbp
  401668:	c3                   	retq   
  401669:	e8 32 fe ff ff       	callq  4014a0 <explotar()>
  40166e:	66 90                	xchg   %ax,%ax

0000000000401670 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)>:
  401670:	f3 0f 1e fa          	endbr64 
  401674:	41 55                	push   %r13
  401676:	41 54                	push   %r12
  401678:	55                   	push   %rbp
  401679:	48 89 f5             	mov    %rsi,%rbp
  40167c:	53                   	push   %rbx
  40167d:	48 89 fb             	mov    %rdi,%rbx
  401680:	bf 10 00 00 00       	mov    $0x10,%edi
  401685:	48 83 ec 58          	sub    $0x58,%rsp
  401689:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401690:	00 00 
  401692:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  401697:	31 c0                	xor    %eax,%eax
  401699:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
  40169e:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
  4016a3:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  4016a8:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
  4016af:	00 00 
  4016b1:	c6 44 24 30 00       	movb   $0x0,0x30(%rsp)
  4016b6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  4016bd:	00 00 
  4016bf:	e8 5c fb ff ff       	callq  401220 <operator new(unsigned long)@plt>
  4016c4:	48 8d 54 24 0f       	lea    0xf(%rsp),%rdx
  4016c9:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
  4016ce:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4016d3:	48 8d 0d 96 26 00 00 	lea    0x2696(%rip),%rcx        # 403d70 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)::{lambda()#1}> > >+0x10>
  4016da:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4016de:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  4016e3:	4c 89 ef             	mov    %r13,%rdi
  4016e6:	48 89 08             	mov    %rcx,(%rax)
  4016e9:	48 8b 15 f0 28 00 00 	mov    0x28f0(%rip),%rdx        # 403fe0 <pthread_create@GLIBC_2.2.5>
  4016f0:	e8 fb fa ff ff       	callq  4011f0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>
  4016f5:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  4016fa:	48 85 ff             	test   %rdi,%rdi
  4016fd:	74 06                	je     401705 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x95>
  4016ff:	48 8b 07             	mov    (%rdi),%rax
  401702:	ff 50 08             	callq  *0x8(%rax)
  401705:	ba 0b 00 00 00       	mov    $0xb,%edx
  40170a:	48 8d 35 db 09 00 00 	lea    0x9db(%rip),%rsi        # 4020ec <_IO_stdin_used+0xec>
  401711:	48 8d 3d e8 29 00 00 	lea    0x29e8(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401718:	e8 33 fb ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  40171d:	48 85 ed             	test   %rbp,%rbp
  401720:	0f 84 ba 00 00 00    	je     4017e0 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x170>
  401726:	48 89 ef             	mov    %rbp,%rdi
  401729:	e8 72 fa ff ff       	callq  4011a0 <strlen@plt>
  40172e:	48 89 ee             	mov    %rbp,%rsi
  401731:	48 8d 3d c8 29 00 00 	lea    0x29c8(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401738:	48 89 c2             	mov    %rax,%rdx
  40173b:	e8 10 fb ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401740:	ba 02 00 00 00       	mov    $0x2,%edx
  401745:	48 8d 35 ac 09 00 00 	lea    0x9ac(%rip),%rsi        # 4020f8 <_IO_stdin_used+0xf8>
  40174c:	48 8d 3d ad 29 00 00 	lea    0x29ad(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401753:	e8 f8 fa ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401758:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  40175d:	48 8d 3d bc 2a 00 00 	lea    0x2abc(%rip),%rdi        # 404220 <std::cin@@GLIBCXX_3.4>
  401764:	e8 07 fb ff ff       	callq  401270 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>
  401769:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
  40176e:	0f ae f0             	mfence 
  401771:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  401776:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
  40177a:	74 0c                	je     401788 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x118>
  40177c:	e8 1f fd ff ff       	callq  4014a0 <explotar()>
  401781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401788:	48 85 d2             	test   %rdx,%rdx
  40178b:	74 11                	je     40179e <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x12e>
  40178d:	48 8b 33             	mov    (%rbx),%rsi
  401790:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  401795:	e8 16 fa ff ff       	callq  4011b0 <memcmp@plt>
  40179a:	85 c0                	test   %eax,%eax
  40179c:	75 de                	jne    40177c <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x10c>
  40179e:	4c 89 ef             	mov    %r13,%rdi
  4017a1:	e8 0a fb ff ff       	callq  4012b0 <std::thread::join()@plt>
  4017a6:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
  4017ac:	75 5c                	jne    40180a <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x19a>
  4017ae:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  4017b3:	4c 39 e7             	cmp    %r12,%rdi
  4017b6:	74 05                	je     4017bd <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x14d>
  4017b8:	e8 43 fa ff ff       	callq  401200 <operator delete(void*)@plt>
  4017bd:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
  4017c2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4017c9:	00 00 
  4017cb:	75 42                	jne    40180f <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x19f>
  4017cd:	48 83 c4 58          	add    $0x58,%rsp
  4017d1:	5b                   	pop    %rbx
  4017d2:	5d                   	pop    %rbp
  4017d3:	41 5c                	pop    %r12
  4017d5:	41 5d                	pop    %r13
  4017d7:	c3                   	retq   
  4017d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4017df:	00 
  4017e0:	48 8b 05 19 29 00 00 	mov    0x2919(%rip),%rax        # 404100 <std::cout@@GLIBCXX_3.4>
  4017e7:	48 8d 3d 12 29 00 00 	lea    0x2912(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  4017ee:	48 03 78 e8          	add    -0x18(%rax),%rdi
  4017f2:	8b 77 20             	mov    0x20(%rdi),%esi
  4017f5:	83 ce 01             	or     $0x1,%esi
  4017f8:	e8 a3 fa ff ff       	callq  4012a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
  4017fd:	e9 3e ff ff ff       	jmpq   401740 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0xd0>
  401802:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
  401808:	74 35                	je     40183f <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x1cf>
  40180a:	e8 81 f9 ff ff       	callq  401190 <std::terminate()@plt>
  40180f:	e8 2c fa ff ff       	callq  401240 <__stack_chk_fail@plt>
  401814:	f3 0f 1e fa          	endbr64 
  401818:	48 89 c5             	mov    %rax,%rbp
  40181b:	eb e5                	jmp    401802 <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x192>
  40181d:	f3 0f 1e fa          	endbr64 
  401821:	48 89 c5             	mov    %rax,%rbp
  401824:	eb 09                	jmp    40182f <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x1bf>
  401826:	f3 0f 1e fa          	endbr64 
  40182a:	48 89 c5             	mov    %rax,%rbp
  40182d:	eb 10                	jmp    40183f <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x1cf>
  40182f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  401834:	48 85 ff             	test   %rdi,%rdi
  401837:	74 06                	je     40183f <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x1cf>
  401839:	48 8b 07             	mov    (%rdi),%rax
  40183c:	ff 50 08             	callq  *0x8(%rax)
  40183f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  401844:	4c 39 e7             	cmp    %r12,%rdi
  401847:	74 05                	je     40184e <void comparar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x1de>
  401849:	e8 b2 f9 ff ff       	callq  401200 <operator delete(void*)@plt>
  40184e:	48 89 ef             	mov    %rbp,%rdi
  401851:	e8 6a fa ff ff       	callq  4012c0 <_Unwind_Resume@plt>
  401856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40185d:	00 00 00 

0000000000401860 <void comparar<int>(int const&, char const*)>:
  401860:	f3 0f 1e fa          	endbr64 
  401864:	41 55                	push   %r13
  401866:	41 54                	push   %r12
  401868:	55                   	push   %rbp
  401869:	48 89 f5             	mov    %rsi,%rbp
  40186c:	53                   	push   %rbx
  40186d:	48 89 fb             	mov    %rdi,%rbx
  401870:	bf 10 00 00 00       	mov    $0x10,%edi
  401875:	48 83 ec 28          	sub    $0x28,%rsp
  401879:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401880:	00 00 
  401882:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  401887:	31 c0                	xor    %eax,%eax
  401889:	c6 44 24 07 01       	movb   $0x1,0x7(%rsp)
  40188e:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
  401893:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
  401898:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  40189f:	00 00 
  4018a1:	e8 7a f9 ff ff       	callq  401220 <operator new(unsigned long)@plt>
  4018a6:	48 8d 54 24 07       	lea    0x7(%rsp),%rdx
  4018ab:	4c 89 e6             	mov    %r12,%rsi
  4018ae:	4c 89 ef             	mov    %r13,%rdi
  4018b1:	48 8d 0d e0 24 00 00 	lea    0x24e0(%rip),%rcx        # 403d98 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<comparar<int>(int const&, char const*)::{lambda()#1}> > >+0x10>
  4018b8:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4018bc:	48 8b 15 1d 27 00 00 	mov    0x271d(%rip),%rdx        # 403fe0 <pthread_create@GLIBC_2.2.5>
  4018c3:	48 89 08             	mov    %rcx,(%rax)
  4018c6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  4018cb:	e8 20 f9 ff ff       	callq  4011f0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>
  4018d0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4018d5:	48 85 ff             	test   %rdi,%rdi
  4018d8:	74 06                	je     4018e0 <void comparar<int>(int const&, char const*)+0x80>
  4018da:	48 8b 07             	mov    (%rdi),%rax
  4018dd:	ff 50 08             	callq  *0x8(%rax)
  4018e0:	ba 0b 00 00 00       	mov    $0xb,%edx
  4018e5:	48 8d 35 00 08 00 00 	lea    0x800(%rip),%rsi        # 4020ec <_IO_stdin_used+0xec>
  4018ec:	48 8d 3d 0d 28 00 00 	lea    0x280d(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  4018f3:	e8 58 f9 ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  4018f8:	48 85 ed             	test   %rbp,%rbp
  4018fb:	0f 84 7f 00 00 00    	je     401980 <void comparar<int>(int const&, char const*)+0x120>
  401901:	48 89 ef             	mov    %rbp,%rdi
  401904:	e8 97 f8 ff ff       	callq  4011a0 <strlen@plt>
  401909:	48 89 ee             	mov    %rbp,%rsi
  40190c:	48 8d 3d ed 27 00 00 	lea    0x27ed(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401913:	48 89 c2             	mov    %rax,%rdx
  401916:	e8 35 f9 ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  40191b:	ba 02 00 00 00       	mov    $0x2,%edx
  401920:	48 8d 35 d1 07 00 00 	lea    0x7d1(%rip),%rsi        # 4020f8 <_IO_stdin_used+0xf8>
  401927:	48 8d 3d d2 27 00 00 	lea    0x27d2(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  40192e:	e8 1d f9 ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401933:	4c 89 e6             	mov    %r12,%rsi
  401936:	48 8d 3d e3 28 00 00 	lea    0x28e3(%rip),%rdi        # 404220 <std::cin@@GLIBCXX_3.4>
  40193d:	e8 8e f8 ff ff       	callq  4011d0 <std::istream::operator>>(int&)@plt>
  401942:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
  401947:	0f ae f0             	mfence 
  40194a:	8b 44 24 10          	mov    0x10(%rsp),%eax
  40194e:	39 03                	cmp    %eax,(%rbx)
  401950:	75 62                	jne    4019b4 <void comparar<int>(int const&, char const*)+0x154>
  401952:	4c 89 ef             	mov    %r13,%rdi
  401955:	e8 56 f9 ff ff       	callq  4012b0 <std::thread::join()@plt>
  40195a:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
  401960:	75 4d                	jne    4019af <void comparar<int>(int const&, char const*)+0x14f>
  401962:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401967:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40196e:	00 00 
  401970:	75 30                	jne    4019a2 <void comparar<int>(int const&, char const*)+0x142>
  401972:	48 83 c4 28          	add    $0x28,%rsp
  401976:	5b                   	pop    %rbx
  401977:	5d                   	pop    %rbp
  401978:	41 5c                	pop    %r12
  40197a:	41 5d                	pop    %r13
  40197c:	c3                   	retq   
  40197d:	0f 1f 00             	nopl   (%rax)
  401980:	48 8b 05 79 27 00 00 	mov    0x2779(%rip),%rax        # 404100 <std::cout@@GLIBCXX_3.4>
  401987:	48 8d 3d 72 27 00 00 	lea    0x2772(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  40198e:	48 03 78 e8          	add    -0x18(%rax),%rdi
  401992:	8b 77 20             	mov    0x20(%rdi),%esi
  401995:	83 ce 01             	or     $0x1,%esi
  401998:	e8 03 f9 ff ff       	callq  4012a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
  40199d:	e9 79 ff ff ff       	jmpq   40191b <void comparar<int>(int const&, char const*)+0xbb>
  4019a2:	e8 99 f8 ff ff       	callq  401240 <__stack_chk_fail@plt>
  4019a7:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
  4019ad:	74 32                	je     4019e1 <void comparar<int>(int const&, char const*)+0x181>
  4019af:	e8 dc f7 ff ff       	callq  401190 <std::terminate()@plt>
  4019b4:	e8 e7 fa ff ff       	callq  4014a0 <explotar()>
  4019b9:	f3 0f 1e fa          	endbr64 
  4019bd:	48 89 c7             	mov    %rax,%rdi
  4019c0:	eb e5                	jmp    4019a7 <void comparar<int>(int const&, char const*)+0x147>
  4019c2:	f3 0f 1e fa          	endbr64 
  4019c6:	48 89 c5             	mov    %rax,%rbp
  4019c9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4019ce:	48 85 ff             	test   %rdi,%rdi
  4019d1:	74 06                	je     4019d9 <void comparar<int>(int const&, char const*)+0x179>
  4019d3:	48 8b 07             	mov    (%rdi),%rax
  4019d6:	ff 50 08             	callq  *0x8(%rax)
  4019d9:	48 89 ef             	mov    %rbp,%rdi
  4019dc:	e8 df f8 ff ff       	callq  4012c0 <_Unwind_Resume@plt>
  4019e1:	e8 da f8 ff ff       	callq  4012c0 <_Unwind_Resume@plt>
  4019e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ed:	00 00 00 

00000000004019f0 <__libc_csu_init>:
  4019f0:	f3 0f 1e fa          	endbr64 
  4019f4:	41 57                	push   %r15
  4019f6:	4c 8d 3d 4b 23 00 00 	lea    0x234b(%rip),%r15        # 403d48 <__frame_dummy_init_array_entry>
  4019fd:	41 56                	push   %r14
  4019ff:	49 89 d6             	mov    %rdx,%r14
  401a02:	41 55                	push   %r13
  401a04:	49 89 f5             	mov    %rsi,%r13
  401a07:	41 54                	push   %r12
  401a09:	41 89 fc             	mov    %edi,%r12d
  401a0c:	55                   	push   %rbp
  401a0d:	48 8d 2d 44 23 00 00 	lea    0x2344(%rip),%rbp        # 403d58 <__do_global_dtors_aux_fini_array_entry>
  401a14:	53                   	push   %rbx
  401a15:	4c 29 fd             	sub    %r15,%rbp
  401a18:	48 83 ec 08          	sub    $0x8,%rsp
  401a1c:	e8 df f5 ff ff       	callq  401000 <_init>
  401a21:	48 c1 fd 03          	sar    $0x3,%rbp
  401a25:	74 1f                	je     401a46 <__libc_csu_init+0x56>
  401a27:	31 db                	xor    %ebx,%ebx
  401a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401a30:	4c 89 f2             	mov    %r14,%rdx
  401a33:	4c 89 ee             	mov    %r13,%rsi
  401a36:	44 89 e7             	mov    %r12d,%edi
  401a39:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  401a3d:	48 83 c3 01          	add    $0x1,%rbx
  401a41:	48 39 dd             	cmp    %rbx,%rbp
  401a44:	75 ea                	jne    401a30 <__libc_csu_init+0x40>
  401a46:	48 83 c4 08          	add    $0x8,%rsp
  401a4a:	5b                   	pop    %rbx
  401a4b:	5d                   	pop    %rbp
  401a4c:	41 5c                	pop    %r12
  401a4e:	41 5d                	pop    %r13
  401a50:	41 5e                	pop    %r14
  401a52:	41 5f                	pop    %r15
  401a54:	c3                   	retq   
  401a55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401a5c:	00 00 00 00 

0000000000401a60 <__libc_csu_fini>:
  401a60:	f3 0f 1e fa          	endbr64 
  401a64:	c3                   	retq   

Desensamblado de la sección .fini:

0000000000401a68 <_fini>:
  401a68:	f3 0f 1e fa          	endbr64 
  401a6c:	48 83 ec 08          	sub    $0x8,%rsp
  401a70:	48 83 c4 08          	add    $0x8,%rsp
  401a74:	c3                   	retq   
