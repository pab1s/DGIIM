
señales:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 403ff0 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	f2 ff 25 e3 2f 00 00 	bnd jmpq *0x2fe3(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102d:	0f 1f 00             	nopl   (%rax)
  401030:	f3 0f 1e fa          	endbr64 
  401034:	68 00 00 00 00       	pushq  $0x0
  401039:	f2 e9 e1 ff ff ff    	bnd jmpq 401020 <.plt>
  40103f:	90                   	nop
  401040:	f3 0f 1e fa          	endbr64 
  401044:	68 01 00 00 00       	pushq  $0x1
  401049:	f2 e9 d1 ff ff ff    	bnd jmpq 401020 <.plt>
  40104f:	90                   	nop
  401050:	f3 0f 1e fa          	endbr64 
  401054:	68 02 00 00 00       	pushq  $0x2
  401059:	f2 e9 c1 ff ff ff    	bnd jmpq 401020 <.plt>
  40105f:	90                   	nop
  401060:	f3 0f 1e fa          	endbr64 
  401064:	68 03 00 00 00       	pushq  $0x3
  401069:	f2 e9 b1 ff ff ff    	bnd jmpq 401020 <.plt>
  40106f:	90                   	nop
  401070:	f3 0f 1e fa          	endbr64 
  401074:	68 04 00 00 00       	pushq  $0x4
  401079:	f2 e9 a1 ff ff ff    	bnd jmpq 401020 <.plt>
  40107f:	90                   	nop
  401080:	f3 0f 1e fa          	endbr64 
  401084:	68 05 00 00 00       	pushq  $0x5
  401089:	f2 e9 91 ff ff ff    	bnd jmpq 401020 <.plt>
  40108f:	90                   	nop
  401090:	f3 0f 1e fa          	endbr64 
  401094:	68 06 00 00 00       	pushq  $0x6
  401099:	f2 e9 81 ff ff ff    	bnd jmpq 401020 <.plt>
  40109f:	90                   	nop
  4010a0:	f3 0f 1e fa          	endbr64 
  4010a4:	68 07 00 00 00       	pushq  $0x7
  4010a9:	f2 e9 71 ff ff ff    	bnd jmpq 401020 <.plt>
  4010af:	90                   	nop
  4010b0:	f3 0f 1e fa          	endbr64 
  4010b4:	68 08 00 00 00       	pushq  $0x8
  4010b9:	f2 e9 61 ff ff ff    	bnd jmpq 401020 <.plt>
  4010bf:	90                   	nop
  4010c0:	f3 0f 1e fa          	endbr64 
  4010c4:	68 09 00 00 00       	pushq  $0x9
  4010c9:	f2 e9 51 ff ff ff    	bnd jmpq 401020 <.plt>
  4010cf:	90                   	nop
  4010d0:	f3 0f 1e fa          	endbr64 
  4010d4:	68 0a 00 00 00       	pushq  $0xa
  4010d9:	f2 e9 41 ff ff ff    	bnd jmpq 401020 <.plt>
  4010df:	90                   	nop
  4010e0:	f3 0f 1e fa          	endbr64 
  4010e4:	68 0b 00 00 00       	pushq  $0xb
  4010e9:	f2 e9 31 ff ff ff    	bnd jmpq 401020 <.plt>
  4010ef:	90                   	nop

Desensamblado de la sección .plt.sec:

00000000004010f0 <memcmp@plt>:
  4010f0:	f3 0f 1e fa          	endbr64 
  4010f4:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 404018 <memcmp@GLIBC_2.2.5>
  4010fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401100 <std::istream::operator>>(int&)@plt>:
  401100:	f3 0f 1e fa          	endbr64 
  401104:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 404020 <std::istream::operator>>(int&)@GLIBCXX_3.4>
  40110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401110 <__cxa_atexit@plt>:
  401110:	f3 0f 1e fa          	endbr64 
  401114:	f2 ff 25 0d 2f 00 00 	bnd jmpq *0x2f0d(%rip)        # 404028 <__cxa_atexit@GLIBC_2.2.5>
  40111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401120 <operator delete(void*)@plt>:
  401120:	f3 0f 1e fa          	endbr64 
  401124:	f2 ff 25 05 2f 00 00 	bnd jmpq *0x2f05(%rip)        # 404030 <operator delete(void*)@GLIBCXX_3.4>
  40112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401130 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
  401130:	f3 0f 1e fa          	endbr64 
  401134:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 404038 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@GLIBCXX_3.4>
  40113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
  401140:	f3 0f 1e fa          	endbr64 
  401144:	f2 ff 25 f5 2e 00 00 	bnd jmpq *0x2ef5(%rip)        # 404040 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
  40114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401150 <signal@plt>:
  401150:	f3 0f 1e fa          	endbr64 
  401154:	f2 ff 25 ed 2e 00 00 	bnd jmpq *0x2eed(%rip)        # 404048 <signal@GLIBC_2.2.5>
  40115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401160 <exit@plt>:
  401160:	f3 0f 1e fa          	endbr64 
  401164:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 404050 <exit@GLIBC_2.2.5>
  40116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401170 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>:
  401170:	f3 0f 1e fa          	endbr64 
  401174:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 404058 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@GLIBCXX_3.4.21>
  40117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401180 <std::ios_base::Init::Init()@plt>:
  401180:	f3 0f 1e fa          	endbr64 
  401184:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 404060 <std::ios_base::Init::Init()@GLIBCXX_3.4>
  40118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401190 <_Unwind_Resume@plt>:
  401190:	f3 0f 1e fa          	endbr64 
  401194:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 404068 <_Unwind_Resume@GCC_3.0>
  40119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011a0 <alarm@plt>:
  4011a0:	f3 0f 1e fa          	endbr64 
  4011a4:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 404070 <alarm@GLIBC_2.2.5>
  4011ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .text:

00000000004011b0 <main.cold>:
  4011b0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4011b5:	48 39 df             	cmp    %rbx,%rdi
  4011b8:	74 05                	je     4011bf <main.cold+0xf>
  4011ba:	e8 61 ff ff ff       	callq  401120 <operator delete(void*)@plt>
  4011bf:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4011c4:	4c 39 e7             	cmp    %r12,%rdi
  4011c7:	74 05                	je     4011ce <main.cold+0x1e>
  4011c9:	e8 52 ff ff ff       	callq  401120 <operator delete(void*)@plt>
  4011ce:	48 89 ef             	mov    %rbp,%rdi
  4011d1:	e8 ba ff ff ff       	callq  401190 <_Unwind_Resume@plt>
  4011d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4011dd:	00 00 00 

00000000004011e0 <main>:
  4011e0:	f3 0f 1e fa          	endbr64 
  4011e4:	41 54                	push   %r12
  4011e6:	48 8d 35 e3 02 00 00 	lea    0x2e3(%rip),%rsi        # 4014d0 <explotar(int)>
  4011ed:	bf 0e 00 00 00       	mov    $0xe,%edi
  4011f2:	55                   	push   %rbp
  4011f3:	53                   	push   %rbx
  4011f4:	48 83 ec 60          	sub    $0x60,%rsp
  4011f8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4011ff:	00 00 
  401201:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  401206:	31 c0                	xor    %eax,%eax
  401208:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
  40120d:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
  401212:	c7 44 24 20 68 6f 6c 	movl   $0x616c6f68,0x20(%rsp)
  401219:	61 
  40121a:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
  40121f:	48 c7 44 24 18 04 00 	movq   $0x4,0x18(%rsp)
  401226:	00 00 
  401228:	c6 44 24 24 00       	movb   $0x0,0x24(%rsp)
  40122d:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  401232:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
  401239:	00 00 
  40123b:	c6 44 24 40 00       	movb   $0x0,0x40(%rsp)
  401240:	e8 0b ff ff ff       	callq  401150 <signal@plt>
  401245:	bf 05 00 00 00       	mov    $0x5,%edi
  40124a:	e8 51 ff ff ff       	callq  4011a0 <alarm@plt>
  40124f:	ba 0a 00 00 00       	mov    $0xa,%edx
  401254:	48 8d 35 57 0e 00 00 	lea    0xe57(%rip),%rsi        # 4020b2 <_IO_stdin_used+0xb2>
  40125b:	48 8d 3d 5e 2e 00 00 	lea    0x2e5e(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  401262:	e8 d9 fe ff ff       	callq  401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401267:	ba 0b 00 00 00       	mov    $0xb,%edx
  40126c:	48 8d 35 4a 0e 00 00 	lea    0xe4a(%rip),%rsi        # 4020bd <_IO_stdin_used+0xbd>
  401273:	48 8d 3d 46 2e 00 00 	lea    0x2e46(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  40127a:	e8 c1 fe ff ff       	callq  401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  40127f:	ba 02 00 00 00       	mov    $0x2,%edx
  401284:	48 8d 35 3e 0e 00 00 	lea    0xe3e(%rip),%rsi        # 4020c9 <_IO_stdin_used+0xc9>
  40128b:	48 8d 3d 2e 2e 00 00 	lea    0x2e2e(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  401292:	e8 a9 fe ff ff       	callq  401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401297:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  40129c:	48 8d 3d 3d 2f 00 00 	lea    0x2f3d(%rip),%rdi        # 4041e0 <std::cin@@GLIBCXX_3.4>
  4012a3:	e8 c8 fe ff ff       	callq  401170 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>
  4012a8:	31 f6                	xor    %esi,%esi
  4012aa:	bf 0e 00 00 00       	mov    $0xe,%edi
  4012af:	e8 9c fe ff ff       	callq  401150 <signal@plt>
  4012b4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
  4012b9:	48 3b 54 24 18       	cmp    0x18(%rsp),%rdx
  4012be:	74 07                	je     4012c7 <main+0xe7>
  4012c0:	31 ff                	xor    %edi,%edi
  4012c2:	e8 09 02 00 00       	callq  4014d0 <explotar(int)>
  4012c7:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
  4012cc:	48 85 d2             	test   %rdx,%rdx
  4012cf:	74 11                	je     4012e2 <main+0x102>
  4012d1:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  4012d6:	48 89 ef             	mov    %rbp,%rdi
  4012d9:	e8 12 fe ff ff       	callq  4010f0 <memcmp@plt>
  4012de:	85 c0                	test   %eax,%eax
  4012e0:	75 de                	jne    4012c0 <main+0xe0>
  4012e2:	48 39 dd             	cmp    %rbx,%rbp
  4012e5:	74 08                	je     4012ef <main+0x10f>
  4012e7:	48 89 ef             	mov    %rbp,%rdi
  4012ea:	e8 31 fe ff ff       	callq  401120 <operator delete(void*)@plt>
  4012ef:	48 8d 35 da 01 00 00 	lea    0x1da(%rip),%rsi        # 4014d0 <explotar(int)>
  4012f6:	bf 0e 00 00 00       	mov    $0xe,%edi
  4012fb:	e8 50 fe ff ff       	callq  401150 <signal@plt>
  401300:	bf 05 00 00 00       	mov    $0x5,%edi
  401305:	e8 96 fe ff ff       	callq  4011a0 <alarm@plt>
  40130a:	ba 0a 00 00 00       	mov    $0xa,%edx
  40130f:	48 8d 35 9c 0d 00 00 	lea    0xd9c(%rip),%rsi        # 4020b2 <_IO_stdin_used+0xb2>
  401316:	48 8d 3d a3 2d 00 00 	lea    0x2da3(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  40131d:	e8 1e fe ff ff       	callq  401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401322:	ba 03 00 00 00       	mov    $0x3,%edx
  401327:	48 8d 35 9e 0d 00 00 	lea    0xd9e(%rip),%rsi        # 4020cc <_IO_stdin_used+0xcc>
  40132e:	48 8d 3d 8b 2d 00 00 	lea    0x2d8b(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  401335:	e8 06 fe ff ff       	callq  401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  40133a:	ba 02 00 00 00       	mov    $0x2,%edx
  40133f:	48 8d 35 83 0d 00 00 	lea    0xd83(%rip),%rsi        # 4020c9 <_IO_stdin_used+0xc9>
  401346:	48 8d 3d 73 2d 00 00 	lea    0x2d73(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  40134d:	e8 ee fd ff ff       	callq  401140 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401352:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  401357:	48 8d 3d 82 2e 00 00 	lea    0x2e82(%rip),%rdi        # 4041e0 <std::cin@@GLIBCXX_3.4>
  40135e:	e8 9d fd ff ff       	callq  401100 <std::istream::operator>>(int&)@plt>
  401363:	31 f6                	xor    %esi,%esi
  401365:	bf 0e 00 00 00       	mov    $0xe,%edi
  40136a:	e8 e1 fd ff ff       	callq  401150 <signal@plt>
  40136f:	81 7c 24 0c d2 04 00 	cmpl   $0x4d2,0xc(%rsp)
  401376:	00 
  401377:	75 05                	jne    40137e <main+0x19e>
  401379:	e8 82 01 00 00       	callq  401500 <desactivar()>
  40137e:	31 ff                	xor    %edi,%edi
  401380:	e8 4b 01 00 00       	callq  4014d0 <explotar(int)>
  401385:	f3 0f 1e fa          	endbr64 
  401389:	48 89 c5             	mov    %rax,%rbp
  40138c:	e9 1f fe ff ff       	jmpq   4011b0 <main.cold>
  401391:	f3 0f 1e fa          	endbr64 
  401395:	48 89 c5             	mov    %rax,%rbp
  401398:	e9 22 fe ff ff       	jmpq   4011bf <main.cold+0xf>
  40139d:	0f 1f 00             	nopl   (%rax)

00000000004013a0 <_GLOBAL__sub_I__Z8explotari>:
  4013a0:	f3 0f 1e fa          	endbr64 
  4013a4:	48 83 ec 08          	sub    $0x8,%rsp
  4013a8:	48 8d 3d 4a 2f 00 00 	lea    0x2f4a(%rip),%rdi        # 4042f9 <std::__ioinit>
  4013af:	e8 cc fd ff ff       	callq  401180 <std::ios_base::Init::Init()@plt>
  4013b4:	48 8b 3d 3d 2c 00 00 	mov    0x2c3d(%rip),%rdi        # 403ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
  4013bb:	48 83 c4 08          	add    $0x8,%rsp
  4013bf:	48 8d 15 ba 2c 00 00 	lea    0x2cba(%rip),%rdx        # 404080 <__dso_handle>
  4013c6:	48 8d 35 2c 2f 00 00 	lea    0x2f2c(%rip),%rsi        # 4042f9 <std::__ioinit>
  4013cd:	e9 3e fd ff ff       	jmpq   401110 <__cxa_atexit@plt>
  4013d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4013d9:	00 00 00 
  4013dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013e0 <_start>:
  4013e0:	f3 0f 1e fa          	endbr64 
  4013e4:	31 ed                	xor    %ebp,%ebp
  4013e6:	49 89 d1             	mov    %rdx,%r9
  4013e9:	5e                   	pop    %rsi
  4013ea:	48 89 e2             	mov    %rsp,%rdx
  4013ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4013f1:	50                   	push   %rax
  4013f2:	54                   	push   %rsp
  4013f3:	49 c7 c0 a0 15 40 00 	mov    $0x4015a0,%r8
  4013fa:	48 c7 c1 30 15 40 00 	mov    $0x401530,%rcx
  401401:	48 c7 c7 e0 11 40 00 	mov    $0x4011e0,%rdi
  401408:	ff 15 da 2b 00 00    	callq  *0x2bda(%rip)        # 403fe8 <__libc_start_main@GLIBC_2.2.5>
  40140e:	f4                   	hlt    
  40140f:	90                   	nop

0000000000401410 <_dl_relocate_static_pie>:
  401410:	f3 0f 1e fa          	endbr64 
  401414:	c3                   	retq   
  401415:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40141c:	00 00 00 
  40141f:	90                   	nop

0000000000401420 <deregister_tm_clones>:
  401420:	b8 90 40 40 00       	mov    $0x404090,%eax
  401425:	48 3d 90 40 40 00    	cmp    $0x404090,%rax
  40142b:	74 13                	je     401440 <deregister_tm_clones+0x20>
  40142d:	b8 00 00 00 00       	mov    $0x0,%eax
  401432:	48 85 c0             	test   %rax,%rax
  401435:	74 09                	je     401440 <deregister_tm_clones+0x20>
  401437:	bf 90 40 40 00       	mov    $0x404090,%edi
  40143c:	ff e0                	jmpq   *%rax
  40143e:	66 90                	xchg   %ax,%ax
  401440:	c3                   	retq   
  401441:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401448:	00 00 00 00 
  40144c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401450 <register_tm_clones>:
  401450:	be 90 40 40 00       	mov    $0x404090,%esi
  401455:	48 81 ee 90 40 40 00 	sub    $0x404090,%rsi
  40145c:	48 89 f0             	mov    %rsi,%rax
  40145f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401463:	48 c1 f8 03          	sar    $0x3,%rax
  401467:	48 01 c6             	add    %rax,%rsi
  40146a:	48 d1 fe             	sar    %rsi
  40146d:	74 11                	je     401480 <register_tm_clones+0x30>
  40146f:	b8 00 00 00 00       	mov    $0x0,%eax
  401474:	48 85 c0             	test   %rax,%rax
  401477:	74 07                	je     401480 <register_tm_clones+0x30>
  401479:	bf 90 40 40 00       	mov    $0x404090,%edi
  40147e:	ff e0                	jmpq   *%rax
  401480:	c3                   	retq   
  401481:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401488:	00 00 00 00 
  40148c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401490 <__do_global_dtors_aux>:
  401490:	f3 0f 1e fa          	endbr64 
  401494:	80 3d 5d 2e 00 00 00 	cmpb   $0x0,0x2e5d(%rip)        # 4042f8 <completed.8060>
  40149b:	75 13                	jne    4014b0 <__do_global_dtors_aux+0x20>
  40149d:	55                   	push   %rbp
  40149e:	48 89 e5             	mov    %rsp,%rbp
  4014a1:	e8 7a ff ff ff       	callq  401420 <deregister_tm_clones>
  4014a6:	c6 05 4b 2e 00 00 01 	movb   $0x1,0x2e4b(%rip)        # 4042f8 <completed.8060>
  4014ad:	5d                   	pop    %rbp
  4014ae:	c3                   	retq   
  4014af:	90                   	nop
  4014b0:	c3                   	retq   
  4014b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4014b8:	00 00 00 00 
  4014bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014c0 <frame_dummy>:
  4014c0:	f3 0f 1e fa          	endbr64 
  4014c4:	eb 8a                	jmp    401450 <register_tm_clones>
  4014c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4014cd:	00 00 00 

00000000004014d0 <explotar(int)>:
  4014d0:	f3 0f 1e fa          	endbr64 
  4014d4:	50                   	push   %rax
  4014d5:	58                   	pop    %rax
  4014d6:	48 8d 3d e3 2b 00 00 	lea    0x2be3(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  4014dd:	48 8d 35 24 0b 00 00 	lea    0xb24(%rip),%rsi        # 402008 <_IO_stdin_used+0x8>
  4014e4:	48 83 ec 08          	sub    $0x8,%rsp
  4014e8:	e8 43 fc ff ff       	callq  401130 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  4014ed:	bf 01 00 00 00       	mov    $0x1,%edi
  4014f2:	e8 69 fc ff ff       	callq  401160 <exit@plt>
  4014f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4014fe:	00 00 

0000000000401500 <desactivar()>:
  401500:	f3 0f 1e fa          	endbr64 
  401504:	50                   	push   %rax
  401505:	58                   	pop    %rax
  401506:	48 8d 3d b3 2b 00 00 	lea    0x2bb3(%rip),%rdi        # 4040c0 <std::cout@@GLIBCXX_3.4>
  40150d:	48 8d 35 4c 0b 00 00 	lea    0xb4c(%rip),%rsi        # 402060 <_IO_stdin_used+0x60>
  401514:	48 83 ec 08          	sub    $0x8,%rsp
  401518:	e8 13 fc ff ff       	callq  401130 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  40151d:	31 ff                	xor    %edi,%edi
  40151f:	e8 3c fc ff ff       	callq  401160 <exit@plt>
  401524:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40152b:	00 00 00 
  40152e:	66 90                	xchg   %ax,%ax

0000000000401530 <__libc_csu_init>:
  401530:	f3 0f 1e fa          	endbr64 
  401534:	41 57                	push   %r15
  401536:	4c 8d 3d a3 28 00 00 	lea    0x28a3(%rip),%r15        # 403de0 <__frame_dummy_init_array_entry>
  40153d:	41 56                	push   %r14
  40153f:	49 89 d6             	mov    %rdx,%r14
  401542:	41 55                	push   %r13
  401544:	49 89 f5             	mov    %rsi,%r13
  401547:	41 54                	push   %r12
  401549:	41 89 fc             	mov    %edi,%r12d
  40154c:	55                   	push   %rbp
  40154d:	48 8d 2d 9c 28 00 00 	lea    0x289c(%rip),%rbp        # 403df0 <__do_global_dtors_aux_fini_array_entry>
  401554:	53                   	push   %rbx
  401555:	4c 29 fd             	sub    %r15,%rbp
  401558:	48 83 ec 08          	sub    $0x8,%rsp
  40155c:	e8 9f fa ff ff       	callq  401000 <_init>
  401561:	48 c1 fd 03          	sar    $0x3,%rbp
  401565:	74 1f                	je     401586 <__libc_csu_init+0x56>
  401567:	31 db                	xor    %ebx,%ebx
  401569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401570:	4c 89 f2             	mov    %r14,%rdx
  401573:	4c 89 ee             	mov    %r13,%rsi
  401576:	44 89 e7             	mov    %r12d,%edi
  401579:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  40157d:	48 83 c3 01          	add    $0x1,%rbx
  401581:	48 39 dd             	cmp    %rbx,%rbp
  401584:	75 ea                	jne    401570 <__libc_csu_init+0x40>
  401586:	48 83 c4 08          	add    $0x8,%rsp
  40158a:	5b                   	pop    %rbx
  40158b:	5d                   	pop    %rbp
  40158c:	41 5c                	pop    %r12
  40158e:	41 5d                	pop    %r13
  401590:	41 5e                	pop    %r14
  401592:	41 5f                	pop    %r15
  401594:	c3                   	retq   
  401595:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40159c:	00 00 00 00 

00000000004015a0 <__libc_csu_fini>:
  4015a0:	f3 0f 1e fa          	endbr64 
  4015a4:	c3                   	retq   

Desensamblado de la sección .fini:

00000000004015a8 <_fini>:
  4015a8:	f3 0f 1e fa          	endbr64 
  4015ac:	48 83 ec 08          	sub    $0x8,%rsp
  4015b0:	48 83 c4 08          	add    $0x8,%rsp
  4015b4:	c3                   	retq   
