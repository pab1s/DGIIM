library(factoextra)
df = read.csv("college.csv")
View(df)
typeof(df$control)
df$control = as.factor(df$control)
typeof(df$control)
df = read.csv("college.csv")
library(factoextra)
df = read.csv("college.csv")
tree.college<-hclust(dist(df), method="complete")
fviz_dend(tree.college, cex = 0.5 , main = "College dataset tree - complete")
tree.college<-hclust(dist(df), method="complete")
fviz_dend(tree.college, cex = 0.5 , main = "College dataset tree - complete")
fviz_dend(tree.college, k=3, cex = 0.5 , main = "College dataset tree - complete")
df$control = as.factor(df$control)
df$region = as.factor(df$region)
df$gender = as.factor(df$gender)
df$state = as.factor(df$state)
df$highest_degree = as.factor(df$highest_degree)
typeof(df$control)
df$city = as.factor(df$city)
row.names(df) = df[2]
row.names(df) = df$name
row.names(df) = df$id
df = df[c(-1,-2)]
df = read.csv("college.csv")
tree.college<-hclust(dist(df), method="complete")
df$control = as.factor(df$control)
df$region = as.factor(df$region)
df$gender = as.factor(df$gender)
df$state = as.factor(df$state)
df$highest_degree = as.factor(df$highest_degree)
df$city = as.factor(df$city)
row.names(df) = df$id
df = df[c(-1,-2)]
tree.college<-hclust(dist(df), method="complete")
fviz_dend(tree.college, cex = 0.5 , main = "College dataset tree - complete")
pheatmap(df, clustering_method="average", cutree_rows = 4)
library(pheatmap)
df = read.csv("college.csv")
pheatmap(df, clustering_method="average", cutree_rows = 4)
install.packages("pheatmap")
library(pheatmap)
df = read.csv("college.csv")
pheatmap(df, clustering_method="average", cutree_rows = 4)
df$control = as.factor(df$control)
df$region = as.factor(df$region)
df$gender = as.factor(df$gender)
df$state = as.factor(df$state)
df$highest_degree = as.factor(df$highest_degree)
df$city = as.factor(df$city)
row.names(df) = df$id
df = df[c(-1,-2)]
pheatmap(df, clustering_method="average", cutree_rows = 4)
tree = hclust(dist(df.scaled), method="complete")
df = read.csv("college.csv")
df$control = as.factor(df$control)
df$region = as.factor(df$region)
df$gender = as.factor(df$gender)
df$state = as.factor(df$state)
df$highest_degree = as.factor(df$highest_degree)
df$city = as.factor(df$city)
row.names(df) = df$id
df = df[c(-1,-2)]
df.scaled = scale(df)
tree = hclust(dist(df.scaled), method="complete")
tree.college<-hclust(dist(df), method="complete")
pheatmap(df, clustering_method="average", cutree_rows = 4)
library(factoextra)
library(pheatmap)
install.packages("pheatmap")
df = read.csv("college.csv")
pheatmap(df, clustering_method="average", cutree_rows = 4)
tree.college<-hclust(dist(df), method="complete")
df$control = as.factor(df$control)
df. scaled = scale(df)
df.scaled = scale(df)
df = read.csv("college.csv")
df.scaled = scale(df)
pheatmap(df, clustering_method="average", cutree_rows = 4)
# Load libraries
library(tidyverse)
library(cluster)
# Read in data
colleges <- read_csv("college.csv")
# Select relevant columns
colleges <- colleges %>% select(admission_rate, sat_avg, undergrads, tuition, faculty_salary_avg, loan_default_rate, median_debt)
# Scale numerical variables
colleges_scaled <- colleges %>% mutate_at(vars(admission_rate:median_debt), scale)
# Generate hierarchical cluster object
colleges_hc <- hclust(dist(colleges_scaled))
# Cut tree into clusters
colleges_clusters <- cutree(colleges_hc, k = 3)
# Count colleges in each cluster
table(colleges_clusters)
# Read in data
coll <- read_csv("college.csv")
# Stablish relevant string data to factor
coll$city <- as.factor(coll$city)
coll$state <- as.factor(coll$state)
coll$region <- as.factor(coll$region)
coll$highest_degree <- as.factor(coll$highest_degree)
coll$control <- as.factor(coll$control)
coll$gender <- as.factor(coll$gender)
data = scale(coll)
rownames(data)<-1:nrow(coll)
data = coll
rownames(data)<-1:nrow(coll)
View(data)
install.packages("ISLR")
library(ISLR)
prueba = College
View(prueba)
# Delete
type(College$Private)
# Delete
typeof(College$Private)
# Load libraries
library(dplyr)
library(cluster)
# Read in data
coll <- read_csv("college.csv")
# Stablish relevant string data to factor
coll$city <- as.factor(coll$city)
coll$state <- as.factor(coll$state)
coll$region <- as.factor(coll$region)
coll$highest_degree <- as.factor(coll$highest_degree)
coll$control <- as.factor(coll$control)
coll$gender <- as.factor(coll$gender)
data = coll[-1]
gower_dist <- daisy(data[, -1],metric = "gower")
typeof(coll[2])
typeof(data[2])
data[2]
data[1]
typeof(data[1])
gower_dist <- daisy(data[, -1],metric = "gower")
coll$loan_default_rate <- as.factor(coll$loan_default_rate)
data = coll[-1]
gower_dist <- daisy(data[, -1],metric = "gower")
# Delete
gower_mat <- as.matrix(gower_dist)
#The most similar
data[ which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ]
#The most dissimilar
data[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ]
tree.coll <- hclust(gower_dist)
dist.coph <- cophenetic(tree.coll)
cor(gower_dist, dist.coph )
fviz_dend(tree.coll, cex = 0.5, k=4, main = "College tree ")
library(factoextra)
fviz_dend(tree.coll, cex = 0.5, k=4, main = "College tree ")
clust.coll <- cutree(tree.coll, 4)
library(pheatmap)
pheatmap(gower_dist, clustering_method="complete", cutree_rows = 4)
heatmap(gower_mat, scale = "none")
summary(gower_dist)
cor(gower_dist, dist.coph )
fviz_dend(tree.coll, cex = 0.5, k=4, main = "College tree ")
fviz_dend(tree.coll, cex = 0.5, k=8, main = "College tree ")
clust.coll <- cutree(tree.coll, 8)
pheatmap(gower_dist, clustering_method="complete", cutree_rows = 8)
heatmap(gower_mat, scale = "none")
# Load libraries
library(dplyr)
library(cluster)
library(factoextra)
library(pheatmap)
# Read in data
coll <- read_csv("college.csv")
# Stablish relevant string data to factor
coll$city <- as.factor(coll$city)
coll$state <- as.factor(coll$state)
coll$region <- as.factor(coll$region)
coll$highest_degree <- as.factor(coll$highest_degree)
coll$control <- as.factor(coll$control)
coll$gender <- as.factor(coll$gender)
coll$loan_default_rate <- as.factor(coll$loan_default_rate)
# Load libraries
library(dplyr)
library(cluster)
library(factoextra)
library(pheatmap)
# Read in data
coll <- read_csv("college.csv")
# Load libraries
library(tidyverse)
library(dplyr)
library(cluster)
library(factoextra)
library(pheatmap)
# Read in data
coll <- read_csv("college.csv")
# Clean up data and factorize relevant data to analize
coll$city <- as.factor(coll$city)
coll$state <- as.factor(coll$state)
coll$region <- as.factor(coll$region)
coll$highest_degree <- as.factor(coll$highest_degree)
coll$control <- as.factor(coll$control)
coll$gender <- as.factor(coll$gender)
coll$loan_default_rate <- as.factor(coll$loan_default_rate)
data = coll[-1]
gower_dist <- daisy(data[, -1],metric = "gower")
# Stablish matrix of gower distances
gower_mat <- as.matrix(gower_dist)
# The most similar values. Here we can see some interesting things. First of all, we can see that
# the similarity in our data is quite influenced by the geographical situation. This is because there
# are many columns which talk about this (city, state, lon, lat). Wjhat is more, we can say that both
# universities have students with a really similar economical and social profile, which could indicate
# that the universities are rivals because both are private and compete for the same population profile.
data[ which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ]
# The most dissimilar values. Here, again, we can see a strong influence of the location of the universities.
# However, we can identify more interesting things. First of all, I would like to highlight the fact that one
# is public and the other one is private and how this is reflected in other data. We can see that in general,
# more wealthy people go to the private one, where students have less debt. We can also see that Wellesley
# College seems to be more exclusive as they have a very low admission rate, small number of students and they
# have a really high SAT score.
data[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ]
# Creation of the hierarchical cluster and its respective tree
tree.coll <- hclust(gower_dist)
dist.coph <- cophenetic(tree.coll)
cor(gower_dist, dist.coph )
clust.coll <- cutree(tree.coll, 8)
# Set the clusters to the data
data.cl=cbind(data, clust.coll)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(control),
state.coll=n()-private.coll
)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(as.bool(control)),
state.coll=n()-private.coll
)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(as.boolean(control)),
state.coll=n()-private.coll
)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(as.logical(control)),
state.coll=n()-private.coll
)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(as.numeric(control)),
state.coll=n()-private.coll
)
# Cluster validation
clust.coll.eclust<- eclust(gower_mat, "hclust", k = 8, stand = TRUE, nstart = 25, graph = FALSE)
fviz_cluster(clust.coll.eclust, gower_mat, geom = "point", repel = FALSE,
ggtheme = theme_classic())
fviz_silhouette(clust.coll.eclust, palette = "jco", ggtheme = theme_classic())
# observations in the wrong cluster
silinfo <- clust.coll.eclust$silinfo
silinfo
sil <- clust.coll.eclust$silinfo$widths
neg <- which(sil$sil_width < 0)
sil[neg, , drop = FALSE]
rn<-rownames(sil[neg, , drop = FALSE] )
data[rn,]
# Load libraries
library(tidyverse)
library(dplyr)
library(cluster)
library(factoextra)
library(pheatmap)
# Read in data
coll <- read_csv("college.csv")
View(coll)
# Read in data
coll <- read_csv("college.csv")
# Clean up data and factorize relevant data to analize
coll$city <- as.factor(coll$city)
coll$state <- as.factor(coll$state)
coll$region <- as.factor(coll$region)
coll$highest_degree <- as.factor(coll$highest_degree)
coll$control <- as.factor(coll$control)
coll$gender <- as.factor(coll$gender)
coll$loan_default_rate <- as.factor(coll$loan_default_rate)
data = coll[-1]
gower_dist <- daisy(data[, -1],metric = "gower")
# Stablish matrix of gower distances
gower_mat <- as.matrix(gower_dist)
# The most similar values. Here we can see some interesting things. First of all, we can see that
# the similarity in our data is quite influenced by the geographical situation. This is because there
# are many columns which talk about this (city, state, lon, lat). Wjhat is more, we can say that both
# universities have students with a really similar economical and social profile, which could indicate
# that the universities are rivals because both are private and compete for the same population profile.
data[ which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ]
# The most dissimilar values. Here, again, we can see a strong influence of the location of the universities.
# However, we can identify more interesting things. First of all, I would like to highlight the fact that one
# is public and the other one is private and how this is reflected in other data. We can see that in general,
# more wealthy people go to the private one, where students have less debt. We can also see that Wellesley
# College seems to be more exclusive as they have a very low admission rate, small number of students and they
# have a really high SAT score.
data[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ]
# Creation of the hierarchical cluster and its respective tree
tree.coll <- hclust(gower_dist)
dist.coph <- cophenetic(tree.coll)
cor(gower_dist, dist.coph )
clust.coll <- cutree(tree.coll, 8)
# Set the clusters to the data
data.cl=cbind(data, clust.coll)
private <- data %>%
group_by(clust.coll) %>%
filter(control == "Private")
private <- data.cl %>%
group_by(clust.coll) %>%
filter(control == "Private")
View(private)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=private,
state.coll=n()-private.coll
)
private <- data.cl %>% count(control)
View(private)
typeof(private[1])
typeof(private[[1]])
private[[1]]
private <- data.cl %>% count(clust.coll, control)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=count(filter(control == "Private")),
state.coll=n()-private.coll
)
View(data.cl)
data.cl %>%
mutate(control = (control == "Private"))
data.cl <- data.cl %>%
mutate(control = (control == "Private"))
colnames(data.cl)[6]
colnames(data.cl)[6] <- "private"
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(control),
state.coll=n()-private.coll
)
# Description of clusters
data.cl %>%
group_by(clust.coll) %>%
summarise(
number.of.obs= n(),
average.threshold.of.admission=mean(admission_rate),
av.region=mean(as.numeric(region)),
sat_avg=mean(sat_avg),
private.coll=sum(private),
state.coll=n()-private.coll
)
