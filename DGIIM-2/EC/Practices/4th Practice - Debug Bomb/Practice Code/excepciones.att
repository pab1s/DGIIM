
excepciones:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 403ff0 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	f2 ff 25 e3 2f 00 00 	bnd jmpq *0x2fe3(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102d:	0f 1f 00             	nopl   (%rax)
  401030:	f3 0f 1e fa          	endbr64 
  401034:	68 00 00 00 00       	pushq  $0x0
  401039:	f2 e9 e1 ff ff ff    	bnd jmpq 401020 <.plt>
  40103f:	90                   	nop
  401040:	f3 0f 1e fa          	endbr64 
  401044:	68 01 00 00 00       	pushq  $0x1
  401049:	f2 e9 d1 ff ff ff    	bnd jmpq 401020 <.plt>
  40104f:	90                   	nop
  401050:	f3 0f 1e fa          	endbr64 
  401054:	68 02 00 00 00       	pushq  $0x2
  401059:	f2 e9 c1 ff ff ff    	bnd jmpq 401020 <.plt>
  40105f:	90                   	nop
  401060:	f3 0f 1e fa          	endbr64 
  401064:	68 03 00 00 00       	pushq  $0x3
  401069:	f2 e9 b1 ff ff ff    	bnd jmpq 401020 <.plt>
  40106f:	90                   	nop
  401070:	f3 0f 1e fa          	endbr64 
  401074:	68 04 00 00 00       	pushq  $0x4
  401079:	f2 e9 a1 ff ff ff    	bnd jmpq 401020 <.plt>
  40107f:	90                   	nop
  401080:	f3 0f 1e fa          	endbr64 
  401084:	68 05 00 00 00       	pushq  $0x5
  401089:	f2 e9 91 ff ff ff    	bnd jmpq 401020 <.plt>
  40108f:	90                   	nop
  401090:	f3 0f 1e fa          	endbr64 
  401094:	68 06 00 00 00       	pushq  $0x6
  401099:	f2 e9 81 ff ff ff    	bnd jmpq 401020 <.plt>
  40109f:	90                   	nop
  4010a0:	f3 0f 1e fa          	endbr64 
  4010a4:	68 07 00 00 00       	pushq  $0x7
  4010a9:	f2 e9 71 ff ff ff    	bnd jmpq 401020 <.plt>
  4010af:	90                   	nop
  4010b0:	f3 0f 1e fa          	endbr64 
  4010b4:	68 08 00 00 00       	pushq  $0x8
  4010b9:	f2 e9 61 ff ff ff    	bnd jmpq 401020 <.plt>
  4010bf:	90                   	nop
  4010c0:	f3 0f 1e fa          	endbr64 
  4010c4:	68 09 00 00 00       	pushq  $0x9
  4010c9:	f2 e9 51 ff ff ff    	bnd jmpq 401020 <.plt>
  4010cf:	90                   	nop
  4010d0:	f3 0f 1e fa          	endbr64 
  4010d4:	68 0a 00 00 00       	pushq  $0xa
  4010d9:	f2 e9 41 ff ff ff    	bnd jmpq 401020 <.plt>
  4010df:	90                   	nop
  4010e0:	f3 0f 1e fa          	endbr64 
  4010e4:	68 0b 00 00 00       	pushq  $0xb
  4010e9:	f2 e9 31 ff ff ff    	bnd jmpq 401020 <.plt>
  4010ef:	90                   	nop
  4010f0:	f3 0f 1e fa          	endbr64 
  4010f4:	68 0c 00 00 00       	pushq  $0xc
  4010f9:	f2 e9 21 ff ff ff    	bnd jmpq 401020 <.plt>
  4010ff:	90                   	nop
  401100:	f3 0f 1e fa          	endbr64 
  401104:	68 0d 00 00 00       	pushq  $0xd
  401109:	f2 e9 11 ff ff ff    	bnd jmpq 401020 <.plt>
  40110f:	90                   	nop
  401110:	f3 0f 1e fa          	endbr64 
  401114:	68 0e 00 00 00       	pushq  $0xe
  401119:	f2 e9 01 ff ff ff    	bnd jmpq 401020 <.plt>
  40111f:	90                   	nop
  401120:	f3 0f 1e fa          	endbr64 
  401124:	68 0f 00 00 00       	pushq  $0xf
  401129:	f2 e9 f1 fe ff ff    	bnd jmpq 401020 <.plt>
  40112f:	90                   	nop
  401130:	f3 0f 1e fa          	endbr64 
  401134:	68 10 00 00 00       	pushq  $0x10
  401139:	f2 e9 e1 fe ff ff    	bnd jmpq 401020 <.plt>
  40113f:	90                   	nop
  401140:	f3 0f 1e fa          	endbr64 
  401144:	68 11 00 00 00       	pushq  $0x11
  401149:	f2 e9 d1 fe ff ff    	bnd jmpq 401020 <.plt>
  40114f:	90                   	nop
  401150:	f3 0f 1e fa          	endbr64 
  401154:	68 12 00 00 00       	pushq  $0x12
  401159:	f2 e9 c1 fe ff ff    	bnd jmpq 401020 <.plt>
  40115f:	90                   	nop
  401160:	f3 0f 1e fa          	endbr64 
  401164:	68 13 00 00 00       	pushq  $0x13
  401169:	f2 e9 b1 fe ff ff    	bnd jmpq 401020 <.plt>
  40116f:	90                   	nop
  401170:	f3 0f 1e fa          	endbr64 
  401174:	68 14 00 00 00       	pushq  $0x14
  401179:	f2 e9 a1 fe ff ff    	bnd jmpq 401020 <.plt>
  40117f:	90                   	nop

Desensamblado de la sección .plt.sec:

0000000000401180 <std::chrono::_V2::system_clock::now()@plt>:
  401180:	f3 0f 1e fa          	endbr64 
  401184:	f2 ff 25 8d 2e 00 00 	bnd jmpq *0x2e8d(%rip)        # 404018 <std::chrono::_V2::system_clock::now()@GLIBCXX_3.4.19>
  40118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401190 <__cxa_begin_catch@plt>:
  401190:	f3 0f 1e fa          	endbr64 
  401194:	f2 ff 25 85 2e 00 00 	bnd jmpq *0x2e85(%rip)        # 404020 <__cxa_begin_catch@CXXABI_1.3>
  40119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011a0 <strlen@plt>:
  4011a0:	f3 0f 1e fa          	endbr64 
  4011a4:	f2 ff 25 7d 2e 00 00 	bnd jmpq *0x2e7d(%rip)        # 404028 <strlen@GLIBC_2.2.5>
  4011ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011b0 <memcmp@plt>:
  4011b0:	f3 0f 1e fa          	endbr64 
  4011b4:	f2 ff 25 75 2e 00 00 	bnd jmpq *0x2e75(%rip)        # 404030 <memcmp@GLIBC_2.2.5>
  4011bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011c0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  4011c0:	f3 0f 1e fa          	endbr64 
  4011c4:	f2 ff 25 6d 2e 00 00 	bnd jmpq *0x2e6d(%rip)        # 404038 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
  4011cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011d0 <__cxa_allocate_exception@plt>:
  4011d0:	f3 0f 1e fa          	endbr64 
  4011d4:	f2 ff 25 65 2e 00 00 	bnd jmpq *0x2e65(%rip)        # 404040 <__cxa_allocate_exception@CXXABI_1.3>
  4011db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011e0 <std::istream::operator>>(int&)@plt>:
  4011e0:	f3 0f 1e fa          	endbr64 
  4011e4:	f2 ff 25 5d 2e 00 00 	bnd jmpq *0x2e5d(%rip)        # 404048 <std::istream::operator>>(int&)@GLIBCXX_3.4>
  4011eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004011f0 <std::__throw_logic_error(char const*)@plt>:
  4011f0:	f3 0f 1e fa          	endbr64 
  4011f4:	f2 ff 25 55 2e 00 00 	bnd jmpq *0x2e55(%rip)        # 404050 <std::__throw_logic_error(char const*)@GLIBCXX_3.4>
  4011fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401200 <__cxa_free_exception@plt>:
  401200:	f3 0f 1e fa          	endbr64 
  401204:	f2 ff 25 4d 2e 00 00 	bnd jmpq *0x2e4d(%rip)        # 404058 <__cxa_free_exception@CXXABI_1.3>
  40120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401210 <memcpy@plt>:
  401210:	f3 0f 1e fa          	endbr64 
  401214:	f2 ff 25 45 2e 00 00 	bnd jmpq *0x2e45(%rip)        # 404060 <memcpy@GLIBC_2.14>
  40121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401220 <__cxa_atexit@plt>:
  401220:	f3 0f 1e fa          	endbr64 
  401224:	f2 ff 25 3d 2e 00 00 	bnd jmpq *0x2e3d(%rip)        # 404068 <__cxa_atexit@GLIBC_2.2.5>
  40122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401230 <operator delete(void*)@plt>:
  401230:	f3 0f 1e fa          	endbr64 
  401234:	f2 ff 25 35 2e 00 00 	bnd jmpq *0x2e35(%rip)        # 404070 <operator delete(void*)@GLIBCXX_3.4>
  40123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401240 <__stack_chk_fail@plt>:
  401240:	f3 0f 1e fa          	endbr64 
  401244:	f2 ff 25 2d 2e 00 00 	bnd jmpq *0x2e2d(%rip)        # 404078 <__stack_chk_fail@GLIBC_2.4>
  40124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
  401250:	f3 0f 1e fa          	endbr64 
  401254:	f2 ff 25 25 2e 00 00 	bnd jmpq *0x2e25(%rip)        # 404080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
  40125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401260 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>:
  401260:	f3 0f 1e fa          	endbr64 
  401264:	f2 ff 25 1d 2e 00 00 	bnd jmpq *0x2e1d(%rip)        # 404088 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@GLIBCXX_3.4.21>
  40126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401270 <std::ios_base::Init::Init()@plt>:
  401270:	f3 0f 1e fa          	endbr64 
  401274:	f2 ff 25 15 2e 00 00 	bnd jmpq *0x2e15(%rip)        # 404090 <std::ios_base::Init::Init()@GLIBCXX_3.4>
  40127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401280 <__cxa_end_catch@plt>:
  401280:	f3 0f 1e fa          	endbr64 
  401284:	f2 ff 25 0d 2e 00 00 	bnd jmpq *0x2e0d(%rip)        # 404098 <__cxa_end_catch@CXXABI_1.3>
  40128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401290 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
  401290:	f3 0f 1e fa          	endbr64 
  401294:	f2 ff 25 05 2e 00 00 	bnd jmpq *0x2e05(%rip)        # 4040a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@GLIBCXX_3.4>
  40129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004012a0 <__cxa_throw@plt>:
  4012a0:	f3 0f 1e fa          	endbr64 
  4012a4:	f2 ff 25 fd 2d 00 00 	bnd jmpq *0x2dfd(%rip)        # 4040a8 <__cxa_throw@CXXABI_1.3>
  4012ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004012b0 <_Unwind_Resume@plt>:
  4012b0:	f3 0f 1e fa          	endbr64 
  4012b4:	f2 ff 25 f5 2d 00 00 	bnd jmpq *0x2df5(%rip)        # 4040b0 <_Unwind_Resume@GCC_3.0>
  4012bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004012c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>:
  4012c0:	f3 0f 1e fa          	endbr64 
  4012c4:	f2 ff 25 ed 2d 00 00 	bnd jmpq *0x2ded(%rip)        # 4040b8 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@GLIBCXX_3.4.21>
  4012cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .text:

00000000004012d0 <main.cold>:
  4012d0:	ba f9 02 95 00       	mov    $0x9502f9,%edx
  4012d5:	48 29 d8             	sub    %rbx,%rax
  4012d8:	48 c1 e2 09          	shl    $0x9,%rdx
  4012dc:	48 39 d0             	cmp    %rdx,%rax
  4012df:	0f 8e b3 00 00 00    	jle    401398 <main.cold+0xc8>
  4012e5:	bf 20 00 00 00       	mov    $0x20,%edi
  4012ea:	e8 e1 fe ff ff       	callq  4011d0 <__cxa_allocate_exception@plt>
  4012ef:	48 8b 35 6a 30 00 00 	mov    0x306a(%rip),%rsi        # 404360 <explotar[abi:cxx11]>
  4012f6:	48 8b 15 6b 30 00 00 	mov    0x306b(%rip),%rdx        # 404368 <explotar[abi:cxx11]+0x8>
  4012fd:	49 89 c4             	mov    %rax,%r12
  401300:	48 8d 40 10          	lea    0x10(%rax),%rax
  401304:	49 89 04 24          	mov    %rax,(%r12)
  401308:	48 01 f2             	add    %rsi,%rdx
  40130b:	4c 89 e7             	mov    %r12,%rdi
  40130e:	e8 2d 04 00 00       	callq  401740 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)>
  401313:	48 8b 15 c6 2c 00 00 	mov    0x2cc6(%rip),%rdx        # 403fe0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4.21>
  40131a:	48 8d 35 bf 2a 00 00 	lea    0x2abf(%rip),%rsi        # 403de0 <vtable for __cxxabiv1::__class_type_info@CXXABI_1.3>
  401321:	4c 89 e7             	mov    %r12,%rdi
  401324:	e8 77 ff ff ff       	callq  4012a0 <__cxa_throw@plt>
  401329:	f3 0f 1e fa          	endbr64 
  40132d:	48 89 c7             	mov    %rax,%rdi
  401330:	48 89 d0             	mov    %rdx,%rax
  401333:	48 83 e8 01          	sub    $0x1,%rax
  401337:	48 89 fd             	mov    %rdi,%rbp
  40133a:	0f 85 c0 00 00 00    	jne    401400 <main.cold+0x130>
  401340:	e8 4b fe ff ff       	callq  401190 <__cxa_begin_catch@plt>
  401345:	48 8d 3d b4 2d 00 00 	lea    0x2db4(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  40134c:	48 8b 50 08          	mov    0x8(%rax),%rdx
  401350:	48 8b 30             	mov    (%rax),%rsi
  401353:	e8 f8 fe ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401358:	48 89 c7             	mov    %rax,%rdi
  40135b:	e8 60 fe ff ff       	callq  4011c0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
  401360:	e8 1b ff ff ff       	callq  401280 <__cxa_end_catch@plt>
  401365:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40136a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  40136f:	48 39 c7             	cmp    %rax,%rdi
  401372:	74 05                	je     401379 <main.cold+0xa9>
  401374:	e8 b7 fe ff ff       	callq  401230 <operator delete(void*)@plt>
  401379:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  40137e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401385:	00 00 
  401387:	0f 85 95 00 00 00    	jne    401422 <main.cold+0x152>
  40138d:	48 83 c4 40          	add    $0x40,%rsp
  401391:	31 c0                	xor    %eax,%eax
  401393:	5b                   	pop    %rbx
  401394:	5d                   	pop    %rbp
  401395:	41 5c                	pop    %r12
  401397:	c3                   	retq   
  401398:	bf 20 00 00 00       	mov    $0x20,%edi
  40139d:	e8 2e fe ff ff       	callq  4011d0 <__cxa_allocate_exception@plt>
  4013a2:	48 8b 35 97 2f 00 00 	mov    0x2f97(%rip),%rsi        # 404340 <desactivar[abi:cxx11]>
  4013a9:	48 8b 15 98 2f 00 00 	mov    0x2f98(%rip),%rdx        # 404348 <desactivar[abi:cxx11]+0x8>
  4013b0:	49 89 c4             	mov    %rax,%r12
  4013b3:	48 8d 40 10          	lea    0x10(%rax),%rax
  4013b7:	49 89 04 24          	mov    %rax,(%r12)
  4013bb:	48 01 f2             	add    %rsi,%rdx
  4013be:	4c 89 e7             	mov    %r12,%rdi
  4013c1:	e8 7a 03 00 00       	callq  401740 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)>
  4013c6:	48 8b 15 13 2c 00 00 	mov    0x2c13(%rip),%rdx        # 403fe0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4.21>
  4013cd:	48 8d 35 0c 2a 00 00 	lea    0x2a0c(%rip),%rsi        # 403de0 <vtable for __cxxabiv1::__class_type_info@CXXABI_1.3>
  4013d4:	4c 89 e7             	mov    %r12,%rdi
  4013d7:	e8 c4 fe ff ff       	callq  4012a0 <__cxa_throw@plt>
  4013dc:	f3 0f 1e fa          	endbr64 
  4013e0:	48 89 c3             	mov    %rax,%rbx
  4013e3:	48 89 d5             	mov    %rdx,%rbp
  4013e6:	4c 89 e7             	mov    %r12,%rdi
  4013e9:	e8 12 fe ff ff       	callq  401200 <__cxa_free_exception@plt>
  4013ee:	48 89 df             	mov    %rbx,%rdi
  4013f1:	48 89 e8             	mov    %rbp,%rax
  4013f4:	e9 3a ff ff ff       	jmpq   401333 <main.cold+0x63>
  4013f9:	f3 0f 1e fa          	endbr64 
  4013fd:	48 89 c5             	mov    %rax,%rbp
  401400:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401405:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  40140a:	48 39 c7             	cmp    %rax,%rdi
  40140d:	74 05                	je     401414 <main.cold+0x144>
  40140f:	e8 1c fe ff ff       	callq  401230 <operator delete(void*)@plt>
  401414:	48 89 ef             	mov    %rbp,%rdi
  401417:	e8 94 fe ff ff       	callq  4012b0 <_Unwind_Resume@plt>
  40141c:	f3 0f 1e fa          	endbr64 
  401420:	eb be                	jmp    4013e0 <main.cold+0x110>
  401422:	e8 19 fe ff ff       	callq  401240 <__stack_chk_fail@plt>
  401427:	f3 0f 1e fa          	endbr64 
  40142b:	48 89 c5             	mov    %rax,%rbp
  40142e:	e8 4d fe ff ff       	callq  401280 <__cxa_end_catch@plt>
  401433:	eb cb                	jmp    401400 <main.cold+0x130>
  401435:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40143c:	00 00 00 
  40143f:	90                   	nop

0000000000401440 <main>:
  401440:	f3 0f 1e fa          	endbr64 
  401444:	41 54                	push   %r12
  401446:	48 8d 35 f4 0b 00 00 	lea    0xbf4(%rip),%rsi        # 402041 <_IO_stdin_used+0x41>
  40144d:	55                   	push   %rbp
  40144e:	53                   	push   %rbx
  40144f:	48 83 ec 40          	sub    $0x40,%rsp
  401453:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40145a:	00 00 
  40145c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  401461:	31 c0                	xor    %eax,%eax
  401463:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
  401468:	48 89 ef             	mov    %rbp,%rdi
  40146b:	e8 20 02 00 00       	callq  401690 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]>
  401470:	48 8d 35 cf 0b 00 00 	lea    0xbcf(%rip),%rsi        # 402046 <_IO_stdin_used+0x46>
  401477:	48 89 ef             	mov    %rbp,%rdi
  40147a:	e8 91 03 00 00       	callq  401810 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)>
  40147f:	ba 0b 00 00 00       	mov    $0xb,%edx
  401484:	48 8d 35 a7 0b 00 00 	lea    0xba7(%rip),%rsi        # 402032 <_IO_stdin_used+0x32>
  40148b:	48 8d 3d 6e 2c 00 00 	lea    0x2c6e(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401492:	e8 b9 fd ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401497:	ba 03 00 00 00       	mov    $0x3,%edx
  40149c:	48 8d 35 af 0b 00 00 	lea    0xbaf(%rip),%rsi        # 402052 <_IO_stdin_used+0x52>
  4014a3:	48 8d 3d 56 2c 00 00 	lea    0x2c56(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  4014aa:	e8 a1 fd ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  4014af:	ba 02 00 00 00       	mov    $0x2,%edx
  4014b4:	48 8d 35 83 0b 00 00 	lea    0xb83(%rip),%rsi        # 40203e <_IO_stdin_used+0x3e>
  4014bb:	48 8d 3d 3e 2c 00 00 	lea    0x2c3e(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  4014c2:	e8 89 fd ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  4014c7:	e8 b4 fc ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  4014cc:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  4014d1:	48 8d 3d 48 2d 00 00 	lea    0x2d48(%rip),%rdi        # 404220 <std::cin@@GLIBCXX_3.4>
  4014d8:	48 89 c3             	mov    %rax,%rbx
  4014db:	e8 00 fd ff ff       	callq  4011e0 <std::istream::operator>>(int&)@plt>
  4014e0:	e8 9b fc ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  4014e5:	81 7c 24 0c d2 04 00 	cmpl   $0x4d2,0xc(%rsp)
  4014ec:	00 
  4014ed:	0f 85 f2 fd ff ff    	jne    4012e5 <main.cold+0x15>
  4014f3:	e9 d8 fd ff ff       	jmpq   4012d0 <main.cold>
  4014f8:	f3 0f 1e fa          	endbr64 
  4014fc:	e9 2c fe ff ff       	jmpq   40132d <main.cold+0x5d>
  401501:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401508:	00 00 00 00 
  40150c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401510 <_GLOBAL__sub_I__Z8explotarB5cxx11>:
  401510:	f3 0f 1e fa          	endbr64 
  401514:	55                   	push   %rbp
  401515:	48 8d 3d 64 2e 00 00 	lea    0x2e64(%rip),%rdi        # 404380 <std::__ioinit>
  40151c:	e8 4f fd ff ff       	callq  401270 <std::ios_base::Init::Init()@plt>
  401521:	48 8b 3d d0 2a 00 00 	mov    0x2ad0(%rip),%rdi        # 403ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
  401528:	48 8d 15 99 2b 00 00 	lea    0x2b99(%rip),%rdx        # 4040c8 <__dso_handle>
  40152f:	48 8d 35 4a 2e 00 00 	lea    0x2e4a(%rip),%rsi        # 404380 <std::__ioinit>
  401536:	e8 e5 fc ff ff       	callq  401220 <__cxa_atexit@plt>
  40153b:	48 8d 35 16 0b 00 00 	lea    0xb16(%rip),%rsi        # 402058 <_IO_stdin_used+0x58>
  401542:	48 8d 3d 17 2e 00 00 	lea    0x2e17(%rip),%rdi        # 404360 <explotar[abi:cxx11]>
  401549:	e8 42 01 00 00       	callq  401690 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]>
  40154e:	48 8b 2d 8b 2a 00 00 	mov    0x2a8b(%rip),%rbp        # 403fe0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4.21>
  401555:	48 8d 15 6c 2b 00 00 	lea    0x2b6c(%rip),%rdx        # 4040c8 <__dso_handle>
  40155c:	48 8d 35 fd 2d 00 00 	lea    0x2dfd(%rip),%rsi        # 404360 <explotar[abi:cxx11]>
  401563:	48 89 ef             	mov    %rbp,%rdi
  401566:	e8 b5 fc ff ff       	callq  401220 <__cxa_atexit@plt>
  40156b:	48 8d 35 6e 0b 00 00 	lea    0xb6e(%rip),%rsi        # 4020e0 <_IO_stdin_used+0xe0>
  401572:	48 8d 3d c7 2d 00 00 	lea    0x2dc7(%rip),%rdi        # 404340 <desactivar[abi:cxx11]>
  401579:	e8 12 01 00 00       	callq  401690 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]>
  40157e:	48 89 ef             	mov    %rbp,%rdi
  401581:	5d                   	pop    %rbp
  401582:	48 8d 15 3f 2b 00 00 	lea    0x2b3f(%rip),%rdx        # 4040c8 <__dso_handle>
  401589:	48 8d 35 b0 2d 00 00 	lea    0x2db0(%rip),%rsi        # 404340 <desactivar[abi:cxx11]>
  401590:	e9 8b fc ff ff       	jmpq   401220 <__cxa_atexit@plt>
  401595:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40159c:	00 00 00 
  40159f:	90                   	nop

00000000004015a0 <_start>:
  4015a0:	f3 0f 1e fa          	endbr64 
  4015a4:	31 ed                	xor    %ebp,%ebp
  4015a6:	49 89 d1             	mov    %rdx,%r9
  4015a9:	5e                   	pop    %rsi
  4015aa:	48 89 e2             	mov    %rsp,%rdx
  4015ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4015b1:	50                   	push   %rax
  4015b2:	54                   	push   %rsp
  4015b3:	49 c7 c0 30 1a 40 00 	mov    $0x401a30,%r8
  4015ba:	48 c7 c1 c0 19 40 00 	mov    $0x4019c0,%rcx
  4015c1:	48 c7 c7 40 14 40 00 	mov    $0x401440,%rdi
  4015c8:	ff 15 1a 2a 00 00    	callq  *0x2a1a(%rip)        # 403fe8 <__libc_start_main@GLIBC_2.2.5>
  4015ce:	f4                   	hlt    
  4015cf:	90                   	nop

00000000004015d0 <_dl_relocate_static_pie>:
  4015d0:	f3 0f 1e fa          	endbr64 
  4015d4:	c3                   	retq   
  4015d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4015dc:	00 00 00 
  4015df:	90                   	nop

00000000004015e0 <deregister_tm_clones>:
  4015e0:	b8 e0 40 40 00       	mov    $0x4040e0,%eax
  4015e5:	48 3d e0 40 40 00    	cmp    $0x4040e0,%rax
  4015eb:	74 13                	je     401600 <deregister_tm_clones+0x20>
  4015ed:	b8 00 00 00 00       	mov    $0x0,%eax
  4015f2:	48 85 c0             	test   %rax,%rax
  4015f5:	74 09                	je     401600 <deregister_tm_clones+0x20>
  4015f7:	bf e0 40 40 00       	mov    $0x4040e0,%edi
  4015fc:	ff e0                	jmpq   *%rax
  4015fe:	66 90                	xchg   %ax,%ax
  401600:	c3                   	retq   
  401601:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401608:	00 00 00 00 
  40160c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401610 <register_tm_clones>:
  401610:	be e0 40 40 00       	mov    $0x4040e0,%esi
  401615:	48 81 ee e0 40 40 00 	sub    $0x4040e0,%rsi
  40161c:	48 89 f0             	mov    %rsi,%rax
  40161f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401623:	48 c1 f8 03          	sar    $0x3,%rax
  401627:	48 01 c6             	add    %rax,%rsi
  40162a:	48 d1 fe             	sar    %rsi
  40162d:	74 11                	je     401640 <register_tm_clones+0x30>
  40162f:	b8 00 00 00 00       	mov    $0x0,%eax
  401634:	48 85 c0             	test   %rax,%rax
  401637:	74 07                	je     401640 <register_tm_clones+0x30>
  401639:	bf e0 40 40 00       	mov    $0x4040e0,%edi
  40163e:	ff e0                	jmpq   *%rax
  401640:	c3                   	retq   
  401641:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401648:	00 00 00 00 
  40164c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401650 <__do_global_dtors_aux>:
  401650:	f3 0f 1e fa          	endbr64 
  401654:	80 3d dd 2c 00 00 00 	cmpb   $0x0,0x2cdd(%rip)        # 404338 <completed.8060>
  40165b:	75 13                	jne    401670 <__do_global_dtors_aux+0x20>
  40165d:	55                   	push   %rbp
  40165e:	48 89 e5             	mov    %rsp,%rbp
  401661:	e8 7a ff ff ff       	callq  4015e0 <deregister_tm_clones>
  401666:	c6 05 cb 2c 00 00 01 	movb   $0x1,0x2ccb(%rip)        # 404338 <completed.8060>
  40166d:	5d                   	pop    %rbp
  40166e:	c3                   	retq   
  40166f:	90                   	nop
  401670:	c3                   	retq   
  401671:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401678:	00 00 00 00 
  40167c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401680 <frame_dummy>:
  401680:	f3 0f 1e fa          	endbr64 
  401684:	eb 8a                	jmp    401610 <register_tm_clones>
  401686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40168d:	00 00 00 

0000000000401690 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]>:
  401690:	41 55                	push   %r13
  401692:	4c 8d 6f 10          	lea    0x10(%rdi),%r13
  401696:	41 54                	push   %r12
  401698:	55                   	push   %rbp
  401699:	48 89 f5             	mov    %rsi,%rbp
  40169c:	53                   	push   %rbx
  40169d:	48 89 fb             	mov    %rdi,%rbx
  4016a0:	48 83 ec 18          	sub    $0x18,%rsp
  4016a4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4016ab:	00 00 
  4016ad:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4016b2:	31 c0                	xor    %eax,%eax
  4016b4:	4c 89 2f             	mov    %r13,(%rdi)
  4016b7:	48 89 f7             	mov    %rsi,%rdi
  4016ba:	e8 e1 fa ff ff       	callq  4011a0 <strlen@plt>
  4016bf:	48 89 04 24          	mov    %rax,(%rsp)
  4016c3:	49 89 c4             	mov    %rax,%r12
  4016c6:	48 83 f8 0f          	cmp    $0xf,%rax
  4016ca:	77 3e                	ja     40170a <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]+0x7a>
  4016cc:	48 83 f8 01          	cmp    $0x1,%rax
  4016d0:	75 31                	jne    401703 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]+0x73>
  4016d2:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
  4016d6:	88 43 10             	mov    %al,0x10(%rbx)
  4016d9:	48 8b 04 24          	mov    (%rsp),%rax
  4016dd:	48 8b 13             	mov    (%rbx),%rdx
  4016e0:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4016e4:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
  4016e8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4016ed:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4016f4:	00 00 
  4016f6:	75 3d                	jne    401735 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]+0xa5>
  4016f8:	48 83 c4 18          	add    $0x18,%rsp
  4016fc:	5b                   	pop    %rbx
  4016fd:	5d                   	pop    %rbp
  4016fe:	41 5c                	pop    %r12
  401700:	41 5d                	pop    %r13
  401702:	c3                   	retq   
  401703:	48 85 c0             	test   %rax,%rax
  401706:	74 d1                	je     4016d9 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]+0x49>
  401708:	eb 1b                	jmp    401725 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]+0x95>
  40170a:	48 89 e6             	mov    %rsp,%rsi
  40170d:	31 d2                	xor    %edx,%edx
  40170f:	48 89 df             	mov    %rbx,%rdi
  401712:	e8 a9 fb ff ff       	callq  4012c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>
  401717:	48 89 03             	mov    %rax,(%rbx)
  40171a:	49 89 c5             	mov    %rax,%r13
  40171d:	48 8b 04 24          	mov    (%rsp),%rax
  401721:	48 89 43 10          	mov    %rax,0x10(%rbx)
  401725:	4c 89 e2             	mov    %r12,%rdx
  401728:	48 89 ee             	mov    %rbp,%rsi
  40172b:	4c 89 ef             	mov    %r13,%rdi
  40172e:	e8 dd fa ff ff       	callq  401210 <memcpy@plt>
  401733:	eb a4                	jmp    4016d9 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]+0x49>
  401735:	e8 06 fb ff ff       	callq  401240 <__stack_chk_fail@plt>
  40173a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401740 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)>:
  401740:	f3 0f 1e fa          	endbr64 
  401744:	41 54                	push   %r12
  401746:	49 89 d4             	mov    %rdx,%r12
  401749:	55                   	push   %rbp
  40174a:	48 89 f5             	mov    %rsi,%rbp
  40174d:	53                   	push   %rbx
  40174e:	48 89 fb             	mov    %rdi,%rbx
  401751:	48 83 ec 10          	sub    $0x10,%rsp
  401755:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40175c:	00 00 
  40175e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401763:	31 c0                	xor    %eax,%eax
  401765:	48 85 d2             	test   %rdx,%rdx
  401768:	74 09                	je     401773 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x33>
  40176a:	48 85 f6             	test   %rsi,%rsi
  40176d:	0f 84 8c 00 00 00    	je     4017ff <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0xbf>
  401773:	49 29 ec             	sub    %rbp,%r12
  401776:	4c 89 24 24          	mov    %r12,(%rsp)
  40177a:	49 83 fc 0f          	cmp    $0xf,%r12
  40177e:	77 50                	ja     4017d0 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x90>
  401780:	48 8b 3b             	mov    (%rbx),%rdi
  401783:	49 83 fc 01          	cmp    $0x1,%r12
  401787:	75 37                	jne    4017c0 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x80>
  401789:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
  40178d:	88 07                	mov    %al,(%rdi)
  40178f:	4c 8b 24 24          	mov    (%rsp),%r12
  401793:	48 8b 3b             	mov    (%rbx),%rdi
  401796:	4c 89 63 08          	mov    %r12,0x8(%rbx)
  40179a:	42 c6 04 27 00       	movb   $0x0,(%rdi,%r12,1)
  40179f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4017a4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4017ab:	00 00 
  4017ad:	75 5c                	jne    40180b <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0xcb>
  4017af:	48 83 c4 10          	add    $0x10,%rsp
  4017b3:	5b                   	pop    %rbx
  4017b4:	5d                   	pop    %rbp
  4017b5:	41 5c                	pop    %r12
  4017b7:	c3                   	retq   
  4017b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4017bf:	00 
  4017c0:	4d 85 e4             	test   %r12,%r12
  4017c3:	74 d1                	je     401796 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x56>
  4017c5:	eb 24                	jmp    4017eb <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0xab>
  4017c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4017ce:	00 00 
  4017d0:	48 89 df             	mov    %rbx,%rdi
  4017d3:	48 89 e6             	mov    %rsp,%rsi
  4017d6:	31 d2                	xor    %edx,%edx
  4017d8:	e8 e3 fa ff ff       	callq  4012c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>
  4017dd:	48 89 03             	mov    %rax,(%rbx)
  4017e0:	48 89 c7             	mov    %rax,%rdi
  4017e3:	48 8b 04 24          	mov    (%rsp),%rax
  4017e7:	48 89 43 10          	mov    %rax,0x10(%rbx)
  4017eb:	4c 89 e2             	mov    %r12,%rdx
  4017ee:	48 89 ee             	mov    %rbp,%rsi
  4017f1:	e8 1a fa ff ff       	callq  401210 <memcpy@plt>
  4017f6:	4c 8b 24 24          	mov    (%rsp),%r12
  4017fa:	48 8b 3b             	mov    (%rbx),%rdi
  4017fd:	eb 97                	jmp    401796 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x56>
  4017ff:	48 8d 3d 02 08 00 00 	lea    0x802(%rip),%rdi        # 402008 <_IO_stdin_used+0x8>
  401806:	e8 e5 f9 ff ff       	callq  4011f0 <std::__throw_logic_error(char const*)@plt>
  40180b:	e8 30 fa ff ff       	callq  401240 <__stack_chk_fail@plt>

0000000000401810 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)>:
  401810:	f3 0f 1e fa          	endbr64 
  401814:	41 56                	push   %r14
  401816:	ba 0b 00 00 00       	mov    $0xb,%edx
  40181b:	41 55                	push   %r13
  40181d:	41 54                	push   %r12
  40181f:	49 89 fc             	mov    %rdi,%r12
  401822:	48 8d 3d d7 28 00 00 	lea    0x28d7(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401829:	55                   	push   %rbp
  40182a:	48 89 f5             	mov    %rsi,%rbp
  40182d:	48 8d 35 fe 07 00 00 	lea    0x7fe(%rip),%rsi        # 402032 <_IO_stdin_used+0x32>
  401834:	53                   	push   %rbx
  401835:	48 83 ec 30          	sub    $0x30,%rsp
  401839:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401840:	00 00 
  401842:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  401847:	31 c0                	xor    %eax,%eax
  401849:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
  40184e:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
  401853:	4c 89 2c 24          	mov    %r13,(%rsp)
  401857:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  40185e:	00 00 
  401860:	e8 eb f9 ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401865:	48 85 ed             	test   %rbp,%rbp
  401868:	0f 84 fa 00 00 00    	je     401968 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x158>
  40186e:	48 89 ef             	mov    %rbp,%rdi
  401871:	e8 2a f9 ff ff       	callq  4011a0 <strlen@plt>
  401876:	48 89 ee             	mov    %rbp,%rsi
  401879:	48 8d 3d 80 28 00 00 	lea    0x2880(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401880:	48 89 c2             	mov    %rax,%rdx
  401883:	e8 c8 f9 ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  401888:	ba 02 00 00 00       	mov    $0x2,%edx
  40188d:	48 8d 35 aa 07 00 00 	lea    0x7aa(%rip),%rsi        # 40203e <_IO_stdin_used+0x3e>
  401894:	48 8d 3d 65 28 00 00 	lea    0x2865(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  40189b:	e8 b0 f9 ff ff       	callq  401250 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  4018a0:	e8 db f8 ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  4018a5:	48 89 e6             	mov    %rsp,%rsi
  4018a8:	48 8d 3d 71 29 00 00 	lea    0x2971(%rip),%rdi        # 404220 <std::cin@@GLIBCXX_3.4>
  4018af:	48 89 c5             	mov    %rax,%rbp
  4018b2:	e8 a9 f9 ff ff       	callq  401260 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@plt>
  4018b7:	e8 c4 f8 ff ff       	callq  401180 <std::chrono::_V2::system_clock::now()@plt>
  4018bc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4018c1:	48 89 c3             	mov    %rax,%rbx
  4018c4:	49 3b 54 24 08       	cmp    0x8(%r12),%rdx
  4018c9:	74 45                	je     401910 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x100>
  4018cb:	bf 20 00 00 00       	mov    $0x20,%edi
  4018d0:	e8 fb f8 ff ff       	callq  4011d0 <__cxa_allocate_exception@plt>
  4018d5:	48 8b 35 84 2a 00 00 	mov    0x2a84(%rip),%rsi        # 404360 <explotar[abi:cxx11]>
  4018dc:	48 8b 15 85 2a 00 00 	mov    0x2a85(%rip),%rdx        # 404368 <explotar[abi:cxx11]+0x8>
  4018e3:	49 89 c4             	mov    %rax,%r12
  4018e6:	48 8d 40 10          	lea    0x10(%rax),%rax
  4018ea:	49 89 04 24          	mov    %rax,(%r12)
  4018ee:	48 01 f2             	add    %rsi,%rdx
  4018f1:	4c 89 e7             	mov    %r12,%rdi
  4018f4:	e8 47 fe ff ff       	callq  401740 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)>
  4018f9:	48 8b 15 e0 26 00 00 	mov    0x26e0(%rip),%rdx        # 403fe0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4.21>
  401900:	48 8d 35 d9 24 00 00 	lea    0x24d9(%rip),%rsi        # 403de0 <vtable for __cxxabiv1::__class_type_info@CXXABI_1.3>
  401907:	4c 89 e7             	mov    %r12,%rdi
  40190a:	e8 91 f9 ff ff       	callq  4012a0 <__cxa_throw@plt>
  40190f:	90                   	nop
  401910:	4c 8b 34 24          	mov    (%rsp),%r14
  401914:	48 85 d2             	test   %rdx,%rdx
  401917:	74 10                	je     401929 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x119>
  401919:	49 8b 34 24          	mov    (%r12),%rsi
  40191d:	4c 89 f7             	mov    %r14,%rdi
  401920:	e8 8b f8 ff ff       	callq  4011b0 <memcmp@plt>
  401925:	85 c0                	test   %eax,%eax
  401927:	75 a2                	jne    4018cb <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0xbb>
  401929:	48 b8 00 f2 05 2a 01 	movabs $0x12a05f200,%rax
  401930:	00 00 00 
  401933:	48 29 eb             	sub    %rbp,%rbx
  401936:	48 39 c3             	cmp    %rax,%rbx
  401939:	7f 90                	jg     4018cb <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0xbb>
  40193b:	4d 39 ee             	cmp    %r13,%r14
  40193e:	74 08                	je     401948 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x138>
  401940:	4c 89 f7             	mov    %r14,%rdi
  401943:	e8 e8 f8 ff ff       	callq  401230 <operator delete(void*)@plt>
  401948:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  40194d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401954:	00 00 
  401956:	75 32                	jne    40198a <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x17a>
  401958:	48 83 c4 30          	add    $0x30,%rsp
  40195c:	5b                   	pop    %rbx
  40195d:	5d                   	pop    %rbp
  40195e:	41 5c                	pop    %r12
  401960:	41 5d                	pop    %r13
  401962:	41 5e                	pop    %r14
  401964:	c3                   	retq   
  401965:	0f 1f 00             	nopl   (%rax)
  401968:	48 8b 05 91 27 00 00 	mov    0x2791(%rip),%rax        # 404100 <std::cout@@GLIBCXX_3.4>
  40196f:	48 8d 3d 8a 27 00 00 	lea    0x278a(%rip),%rdi        # 404100 <std::cout@@GLIBCXX_3.4>
  401976:	48 03 78 e8          	add    -0x18(%rax),%rdi
  40197a:	8b 77 20             	mov    0x20(%rdi),%esi
  40197d:	83 ce 01             	or     $0x1,%esi
  401980:	e8 0b f9 ff ff       	callq  401290 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
  401985:	e9 fe fe ff ff       	jmpq   401888 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x78>
  40198a:	e8 b1 f8 ff ff       	callq  401240 <__stack_chk_fail@plt>
  40198f:	f3 0f 1e fa          	endbr64 
  401993:	48 89 c5             	mov    %rax,%rbp
  401996:	eb 0f                	jmp    4019a7 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x197>
  401998:	f3 0f 1e fa          	endbr64 
  40199c:	48 89 c5             	mov    %rax,%rbp
  40199f:	4c 89 e7             	mov    %r12,%rdi
  4019a2:	e8 59 f8 ff ff       	callq  401200 <__cxa_free_exception@plt>
  4019a7:	48 8b 3c 24          	mov    (%rsp),%rdi
  4019ab:	4c 39 ef             	cmp    %r13,%rdi
  4019ae:	74 05                	je     4019b5 <void comprobar<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)+0x1a5>
  4019b0:	e8 7b f8 ff ff       	callq  401230 <operator delete(void*)@plt>
  4019b5:	48 89 ef             	mov    %rbp,%rdi
  4019b8:	e8 f3 f8 ff ff       	callq  4012b0 <_Unwind_Resume@plt>
  4019bd:	0f 1f 00             	nopl   (%rax)

00000000004019c0 <__libc_csu_init>:
  4019c0:	f3 0f 1e fa          	endbr64 
  4019c4:	41 57                	push   %r15
  4019c6:	4c 8d 3d fb 23 00 00 	lea    0x23fb(%rip),%r15        # 403dc8 <__frame_dummy_init_array_entry>
  4019cd:	41 56                	push   %r14
  4019cf:	49 89 d6             	mov    %rdx,%r14
  4019d2:	41 55                	push   %r13
  4019d4:	49 89 f5             	mov    %rsi,%r13
  4019d7:	41 54                	push   %r12
  4019d9:	41 89 fc             	mov    %edi,%r12d
  4019dc:	55                   	push   %rbp
  4019dd:	48 8d 2d f4 23 00 00 	lea    0x23f4(%rip),%rbp        # 403dd8 <__do_global_dtors_aux_fini_array_entry>
  4019e4:	53                   	push   %rbx
  4019e5:	4c 29 fd             	sub    %r15,%rbp
  4019e8:	48 83 ec 08          	sub    $0x8,%rsp
  4019ec:	e8 0f f6 ff ff       	callq  401000 <_init>
  4019f1:	48 c1 fd 03          	sar    $0x3,%rbp
  4019f5:	74 1f                	je     401a16 <__libc_csu_init+0x56>
  4019f7:	31 db                	xor    %ebx,%ebx
  4019f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401a00:	4c 89 f2             	mov    %r14,%rdx
  401a03:	4c 89 ee             	mov    %r13,%rsi
  401a06:	44 89 e7             	mov    %r12d,%edi
  401a09:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  401a0d:	48 83 c3 01          	add    $0x1,%rbx
  401a11:	48 39 dd             	cmp    %rbx,%rbp
  401a14:	75 ea                	jne    401a00 <__libc_csu_init+0x40>
  401a16:	48 83 c4 08          	add    $0x8,%rsp
  401a1a:	5b                   	pop    %rbx
  401a1b:	5d                   	pop    %rbp
  401a1c:	41 5c                	pop    %r12
  401a1e:	41 5d                	pop    %r13
  401a20:	41 5e                	pop    %r14
  401a22:	41 5f                	pop    %r15
  401a24:	c3                   	retq   
  401a25:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401a2c:	00 00 00 00 

0000000000401a30 <__libc_csu_fini>:
  401a30:	f3 0f 1e fa          	endbr64 
  401a34:	c3                   	retq   

Desensamblado de la sección .fini:

0000000000401a38 <_fini>:
  401a38:	f3 0f 1e fa          	endbr64 
  401a3c:	48 83 ec 08          	sub    $0x8,%rsp
  401a40:	48 83 c4 08          	add    $0x8,%rsp
  401a44:	c3                   	retq   
